# encoding: utf-8
# 2024 R1
SetScriptVersion(Version="24.1.144")
system1 = GetSystem(Name="Geom")
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
geometry1.SetFile(FilePath="H:/My Drive/chiari-computations/segmentation/s101/ansys geometry/ansys_geometry.scdoc")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
system2 = GetSystem(Name="FLTG")
setup1 = system2.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1 = GetDataEntity("/Mesh 1/TGridData:TGridData")
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
mesh1 = system2.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1 = system2.GetComponent(Name="Mesh")
meshComponent1.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*rotate")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.69168 -4.35306 1.16083) '(0 0 0) '(-0.058824 -0.10425 1.06947) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(2.08206 0.981308 -1.44644) '(0 0 0) '(0.104322 -0.735856 0.311307) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*rotate")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.164645 -0.361099 0.0508548) '(0 0 0) '(0.148501 -0.011746 1.12684) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.464091 0.294803 -0.0916058) '(0 0 0) '(-0.0961133 -1.24525 0.0783443) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.198557 0.442067 -0.186386) '(0 0 0) '(0.634596 0.356602 0.257989) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.866423 -0.206602 -0.10532) '(0 0 0) '(0.0682125 0.608077 -0.0897573) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.143492 -0.419099 0.0185687) '(0 0 0) '(-0.276762 -0.00189659 0.0371318) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.00128728 0.0327671 0.0057257) '(0 0 0) '(0.0346808 -0.0603155 0.0251716) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.591983 -0.00200156 -0.559175) '(0 0 0) '(-0.915518 -0.77794 -1.00521) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['wall_sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura'],r'BOIGrowthRate': 1.1,r'BOISize': 0.005,r'BOIZoneorLabel': r'label',r'CompleteFaceLabelList': [r'wall'],r'DrawSizeControl': True,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['wall_sizing'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.331123 -0.499462 0.714082) '(0 0 0) '(0.758001 0.813431 0.979742) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.116065 0.105645 0.259613) '(0 0 0) '(0.206883 0.351483 -0.240076) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(handle-key \"control z\")(cx-use-window-id 51)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(handle-key \"control z\")(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(handle-key \"control z\")(cx-use-window-id 51)(handle-key \"control z\")(cx-use-window-id 51)(handle-key \"control z\")(cx-use-window-id 51)(handle-key \"control z\")(cx-use-window-id 51)(handle-key \"control z\")(cx-use-window-id 51)(handle-key \"control z\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.3_workflow_files\\FLTG.3.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.3_workflow_files\\FLTG.3.wft')\")")
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.3_workflow_files\\FLTG.3.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.3_workflow_files\\FLTG.3.wft')\")")
