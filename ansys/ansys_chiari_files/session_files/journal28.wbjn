# encoding: utf-8
# 2024 R1
SetScriptVersion(Version="24.1.144")
system1 = GetSystem(Name="FLTG")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1 = GetDataEntity("/Mesh 1/TGridData:TGridData")
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
mesh1 = system1.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="/boundary/refine/local-regions/list-all-regions")
setup1.SendCommand(Command="/boundary/refine/local-regions/list-all-regions")
setup1.SendCommand(Command="/boundary/refine/local-regions/list-all-regions")
setup1.SendCommand(Command="/boundary/refine/local-regions/list-all-regions")
setup1.SendCommand(Command="/boundary/modify/select-zone 30")
setup1.SendCommand(Command="/boundary/modify/select-zone <tonsils'(30 31 33 34 32)")
setup1.SendCommand(Command="/boundary/modify/select-zone 30")
setup1.SendCommand(Command="/boundary/modify/select-zone <top'(30 31 33 34 32)p")
setup1.SendCommand(Command="/boundary/modify/select-zone top")
setup1.SendCommand(Command="/boundary/modify/clear-selections")
setup1.SendCommand(Command="/boundary/modify/select-zone top")
setup1.SendCommand(Command="/boundary/modify/select-zone tonsils")
setup1.SendCommand(Command="/boundary/modify/list-selections")
setup1.SendCommand(Command="/boundary/modify/list-selections")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)")
setup1.SendCommand(Command="/boundary/modify/list-selections")
setup1.SendCommand(Command="/boundary/modify/clear-selections")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*rotate")')
system1.Copy(KeepConnections=True)
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.344051 -0.182839 0.145079) '(0 0 0) '(0.316645 0.272518 0.417992) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0103047 -0.103394 -0.0332994) '(0 0 0) '(-0.345389 -0.139715 -0.0404681) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0659934 -0.0216604 0.0355855) '(0 0 0) '(-0.169767 -0.124443 0.107896) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.059259 0.122512 0.0414803) '(0 0 0) '(-0.091764 -0.133562 -0.177457) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.124612 -0.0657639 0.00561613) '(0 0 0) '(-0.0177353 -0.00614703 0.317133) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.208019 0.0563721 -0.0305287) '(0 0 0) '(0.0791743 0.0252249 -0.453194) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.010636 0.0075364 -0.00523126) '(0 0 0) '(0.0265102 -0.00344998 -0.0588441) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.00199769 -0.0075625 -0.00050661) '(0 0 0) '(-0.00633913 -0.000244617 0.0113441) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.000643104 -0.0136367 0.000445306) '(0 0 0) '(-0.0208761 -0.0053218 0.0329905) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.0446306 -0.0237973 0.0667917) '(0 0 0) '(-0.106785 -0.0565132 0.224773) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.7_workflow_files\\FLTG.7.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.7_workflow_files\\FLTG.7.wft')\")")
system2 = GetSystem(Name="FLTG 1")
meshComponent1 = system2.GetComponent(Name="Mesh")
meshComponent1.Reset()
setup2 = system2.GetContainer(ComponentName="Setup")
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.7_workflow_files\\FLTG-1.7.wft')\")")
fluentLauncherSettings2 = setup2.GetFluentLauncherSettings()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2 = GetDataEntity("/Mesh/TGridData:TGridData")
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
mesh2 = system2.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.001,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "No License for Fluent Application*PanelButtons*PushButton2(Close)")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'GrowthRate': 1.1,r'MaxSize': 0.004,r'MinSize': 0.001,},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state(None)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'ImproveSurfaceMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.001,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "No License for Fluent Application*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state({r'NonConformal': r'No',r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'top', r'bottom'],r'BoundaryLabelTypeList': [r'pressure-outlet', r'velocity-inlet'],r'OldBoundaryLabelList': [r'top', r'bottom'],r'OldBoundaryLabelTypeList': [r'wall', r'wall'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Arguments.set_state({r'OldRegionNameList': [r'patch-body1'],r'OldRegionTypeList': [r'fluid'],r'RegionNameList': [r'fluid'],r'RegionTypeList': [r'fluid'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.set_state({r'BLControlName': r'boundary_layers',r'LocalPrismPreferences': {r'Continuous': r'Continuous',},r'Rate': 1.1,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Arguments.set_state({r'VolumeFill': r'polyhedra',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'ImproveVolumeMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.15,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.3,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.1_workflow_files\\FLTG-1.1.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.1_workflow_files\\FLTG-1.1.wft')\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.7_workflow_files\\FLTG.7.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.7_workflow_files\\FLTG.7.wft')\")")
meshComponent1.Reset()
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.1_workflow_files\\FLTG-1.1.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.1_workflow_files\\FLTG-1.1.wft')\")")
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ReadSubMenu*Journal...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/journal_mesh_cada\") \"All Files (*)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.001,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state(None)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.2_workflow_files\\FLTG-1.2.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.2_workflow_files\\FLTG-1.2.wft')\")")
meshComponent1.Reset()
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.2_workflow_files\\FLTG-1.2.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.2_workflow_files\\FLTG-1.2.wft')\")")
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'GrowthRate': 1.1,r'MaxSize': 0.004,r'MinSize': 0.001,},})\")")
meshComponent1.Reset()
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.3_workflow_files\\FLTG-1.3.wft')\")")
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Start Journal...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/mesh_jou\") \"All Files (*)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.002,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.004,r'MinSize': 0.002,},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state(None)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'ImproveSurfaceMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.002,})\")")
setup2.SendCommand(Command='(%py-exec "workflow.ResetWorkflow()")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
meshComponent1.Reset()
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.4_workflow_files\\FLTG-1.4.wft')\")")
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Start Journal...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/mesh_jou\") \"All Files (*)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.001,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.004,r'MinSize': 0.001,},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state(None)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'ImproveSurfaceMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.001,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state({r'NonConformal': r'No',r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'top', r'bottom'],r'BoundaryLabelTypeList': [r'pressure-outlet', r'velocity-inlet'],r'OldBoundaryLabelList': [r'top', r'bottom'],r'OldBoundaryLabelTypeList': [r'wall', r'wall'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Arguments.set_state({r'OldRegionNameList': [r'patch-body1'],r'OldRegionTypeList': [r'fluid'],r'RegionNameList': [r'fluid'],r'RegionTypeList': [r'fluid'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.set_state({r'BLControlName': r'boundary_layers',r'LocalPrismPreferences': {r'Continuous': r'Continuous',},r'Rate': 1.1,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Arguments.set_state({r'VolumeFill': r'polyhedra',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'ImproveVolumeMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.15,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.3,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.7_workflow_files\\FLTG.7.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.7_workflow_files\\FLTG.7.wft')\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.5_workflow_files\\FLTG-1.5.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.5_workflow_files\\FLTG-1.5.wft')\")")
meshComponent1.Reset()
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.5_workflow_files\\FLTG-1.5.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.5_workflow_files\\FLTG-1.5.wft')\")")
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ReadSubMenu*Journal...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/mesh_jou\") \"All Files (*)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.001,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.004,r'MinSize': 0.001,},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state(None)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'ImproveSurfaceMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.001,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state({r'NonConformal': r'No',r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'top', r'bottom'],r'BoundaryLabelTypeList': [r'pressure-outlet', r'velocity-inlet'],r'OldBoundaryLabelList': [r'top', r'bottom'],r'OldBoundaryLabelTypeList': [r'wall', r'wall'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Arguments.set_state({r'OldRegionNameList': [r'patch-body1'],r'OldRegionTypeList': [r'fluid'],r'RegionNameList': [r'fluid'],r'RegionTypeList': [r'fluid'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.set_state({r'BLControlName': r'boundary_layers',r'LocalPrismPreferences': {r'Continuous': r'Continuous',},r'Rate': 1.1,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Arguments.set_state({r'VolumeFill': r'polyhedra',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'ImproveVolumeMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.15,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.3,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.6_workflow_files\\FLTG-1.6.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.6_workflow_files\\FLTG-1.6.wft')\")")
meshComponent1.Reset()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ReadSubMenu*Journal...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/c1/create_mesh.jou\") \"All Files (*)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ReadSubMenu*Journal...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/c1/create_surfaces_journal_TUI.jou\" \"C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/c1/create_mesh.jou\") \"All Files (*)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:/Users/guill/Documents/chiari/computations/ansys/s101/s101_files/dp0/Geom/DM/Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:/Users/guill/Documents/chiari/computations/ansys/s101/s101_files/dp0/Geom/DM/Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ReadSubMenu*Journal...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/c1/create_mesh.jou\") \"All Files (*)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.001,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup2.SendCommand(Command='(%py-exec "workflow.ResetWorkflow()")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
meshComponent1.Reset()
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.7_workflow_files\\FLTG-1.7.wft')\")")
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.001,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.004,r'MinSize': 0.001,},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state(None)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'ImproveSurfaceMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.001,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state({r'NonConformal': r'No',r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'top', r'bottom'],r'BoundaryLabelTypeList': [r'pressure-outlet', r'velocity-inlet'],r'OldBoundaryLabelList': [r'top', r'bottom'],r'OldBoundaryLabelTypeList': [r'wall', r'wall'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Arguments.set_state({r'OldRegionNameList': [r'patch-body1'],r'OldRegionTypeList': [r'fluid'],r'RegionNameList': [r'fluid'],r'RegionTypeList': [r'fluid'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.set_state({r'BLControlName': r'boundary_layers',r'LocalPrismPreferences': {r'Continuous': r'Continuous',},r'Rate': 1.1,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Arguments.set_state({r'VolumeFill': r'polyhedra',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'ImproveVolumeMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.3,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Revert()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.DeleteTasks(ListOfTasks=[r'wall_sizing'])\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',r'NumParts': 1,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.4_workflow_files\\FLTG-1.4.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.4_workflow_files\\FLTG-1.4.wft')\")")
meshComponent1.Reset()
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.4_workflow_files\\FLTG-1.4.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.4_workflow_files\\FLTG-1.4.wft')\")")
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.001,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.004,r'MinSize': 0.001,},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state(None)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'ImproveSurfaceMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.001,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state({r'NonConformal': r'No',r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'top', r'bottom'],r'BoundaryLabelTypeList': [r'pressure-outlet', r'velocity-inlet'],r'OldBoundaryLabelList': [r'top', r'bottom'],r'OldBoundaryLabelTypeList': [r'wall', r'wall'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Arguments.set_state({r'OldRegionNameList': [r'patch-body1'],r'OldRegionTypeList': [r'fluid'],r'RegionNameList': [r'fluid'],r'RegionTypeList': [r'fluid'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.set_state({r'BLControlName': r'boundary_layers',r'LocalPrismPreferences': {r'Continuous': r'Continuous',},r'Rate': 1.1,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Arguments.set_state({r'VolumeFill': r'polyhedra',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'ImproveVolumeMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.3,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.5_workflow_files\\FLTG-1.5.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.5_workflow_files\\FLTG-1.5.wft')\")")
meshComponent1.Reset()
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.5_workflow_files\\FLTG-1.5.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.5_workflow_files\\FLTG-1.5.wft')\")")
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.0015,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.006,r'MinSize': 0.0015,},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state(None)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'ImproveSurfaceMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.001,})\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.7_workflow_files\\FLTG-1.7.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.7_workflow_files\\FLTG-1.7.wft')\")")
meshComponent1.Reset()
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.7_workflow_files\\FLTG-1.7.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.7_workflow_files\\FLTG-1.7.wft')\")")
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData2.SetEntityProperties(Properties=Set(RunParallel=False, NumberOfProcs=1))
Fluent.Edit(Container=mesh2)
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent1.Refresh()
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ReadSubMenu*Journal...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/c1/create_mesh.jou\") \"All Files (*)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.001,r'BOIZoneorLabel': r'label',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.004,r'MinSize': 0.001,},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state(None)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'ImproveSurfaceMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.001,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state({r'NonConformal': r'No',r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'top', r'bottom'],r'BoundaryLabelTypeList': [r'pressure-outlet', r'velocity-inlet'],r'OldBoundaryLabelList': [r'top', r'bottom'],r'OldBoundaryLabelTypeList': [r'wall', r'wall'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Arguments.set_state({r'OldRegionNameList': [r'patch-body1'],r'OldRegionTypeList': [r'fluid'],r'RegionNameList': [r'fluid'],r'RegionTypeList': [r'fluid'],})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.set_state({r'BLControlName': r'boundary_layers',r'LocalPrismPreferences': {r'Continuous': r'Continuous',},r'Rate': 1.1,})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildAndUpdate(DeferUpdate=False)\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Arguments.set_state({r'VolumeFill': r'polyhedra',})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'ImproveVolumeMesh')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.3,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup2.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ExportSubMenu*Size Field...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/size\") \"size-field files (*.sf *.sf.gz )\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ExportSubMenu*Size Field...")(cx-gui-do cx-set-toggle-button2 "Frame(iUserFrame)*CheckButton1(Write Binary Files)" #f)(cx-gui-do cx-activate-item "Frame(iUserFrame)*CheckButton1(Write Binary Files)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Mesh)*PushButton1(  Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Mesh)*PushButton2(  Quality)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Mesh)*PushButton1(  Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCheck*Perform Mesh Check")')
setup2.SendCommand(Command="(newline)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*MeshMenu*Check")')
setup2.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Mesh Display*fl_mesh_svg_graphics_toolbar")(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 0)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 1)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 0)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 2)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 0)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 3)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 0)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 4)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 0)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 5)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 0)(cx-gui-do cx-activate-tab-index "Display Grid*Frame1" 2)')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Display Grid*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="/mesh/list-mesh-parameter")
setup2.SendCommand(Command="/mesh/check-mesh")
setup2.SendCommand(Command="/mesh/check-quality")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.8_workflow_files\\FLTG-1.8.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.8_workflow_files\\FLTG-1.8.wft')\")")
meshComponent1.Reset()
setup2.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup2.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.8_workflow_files\\FLTG-1.8.wft')\")")
setup2.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG-1\\Fluent\\FLTG-1.8_workflow_files\\FLTG-1.8.wft')\")")
system2.Delete()
meshComponent2 = system1.GetComponent(Name="Mesh")
meshComponent2.Reset()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.7_workflow_files\\FLTG.7.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.7_workflow_files\\FLTG.7.wft')\")")
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent2.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.0005,r'BOIZoneorLabel': r'label',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.002,r'MinSize': 0.0005,},})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state(None)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'ImproveSurfaceMesh')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.001,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state({r'NonConformal': r'No',r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'top', r'bottom'],r'BoundaryLabelTypeList': [r'pressure-outlet', r'velocity-inlet'],r'OldBoundaryLabelList': [r'top', r'bottom'],r'OldBoundaryLabelTypeList': [r'wall', r'wall'],})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Arguments.set_state({r'OldRegionNameList': [r'patch-body1'],r'OldRegionTypeList': [r'fluid'],r'RegionNameList': [r'fluid'],r'RegionTypeList': [r'fluid'],})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.set_state({r'BLControlName': r'boundary_layers',r'LocalPrismPreferences': {r'Continuous': r'Continuous',},r'Rate': 1.1,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildAndUpdate(DeferUpdate=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Arguments.set_state({r'VolumeFill': r'polyhedra',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'ImproveVolumeMesh')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.3,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.1_workflow_files\\FLTG.1.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.1_workflow_files\\FLTG.1.wft')\")")
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list ))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list ))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-activate-item \"Error*OK\")(cx-gui-do cx-activate-item \"Information*OK\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 2))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|c1_fine_variables"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|c1_fine_variables"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|c1_fine_variables"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|c1_fine_variables"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|c1_fine_variables"))(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Revert()\")")
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Table*Table1*Frame1*Table2*Table1*Table3*ButtonBox2*PushButton5(Draw Boundaries)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Table*Table1*Frame1*Table2*Table1*Table3*ButtonBox2*PushButton5(Draw Boundaries)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.189383 -0.288856 0.139735) '(0 0 0) '(0.416944 0.288884 0.4667) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0712294 0.0994619 -0.0500433) '(0 0 0) '(-0.223478 -0.137187 -0.377193) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.386778 -0.401694 -0.0695221) '(0 0 0) '(0.367436 -0.163278 1.12642) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Table*Table1*Frame1*Table2*Table1*Table3*ButtonBox2*PushButton5(Draw Boundaries)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.131519 -0.141468 -0.10251) '(0 0 0) '(-0.0224464 -0.383266 0.233302) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0531523 0.097378 0.124145) '(0 0 0) '(0.127202 0.318504 -0.191127) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0386758 -0.00892922 -0.040359) '(0 0 0) '(-0.0555532 -0.0725352 0.0642618) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0709347 0.385723 0.00469659) '(0 0 0) '(0.491438 0.227546 -0.678351) 0 0)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'cord', r'bottom', r'top'],r'BoundaryLabelTypeList': [r'wall', r'velocity-inlet', r'velocity-inlet'],r'OldBoundaryLabelList': [r'cord', r'bottom', r'top'],r'OldBoundaryLabelTypeList': [r'wall', r'wall', r'wall'],r'OldLabelZoneList': [r'top', r'bottom'],})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.set_state({r'LocalPrismPreferences': {r'Continuous': r'Continuous',},})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildAndUpdate(DeferUpdate=False)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['smooth-transition_1'].ExecuteUpstreamNonExecutedAndThisTask()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.DeleteTasks(ListOfTasks=[r'smooth-transition_1'])\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.3,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.1_workflow_files\\FLTG.1.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.1_workflow_files\\FLTG.1.wft')\")")
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command="/file/set-tui-version \"24.1\"(cx-use-window-id 51)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fluid) (cx-active-window))(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Quick Edit*Table1*PushButton4(icon_close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|top (pressure-outlet, id=14)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|top (pressure-outlet, id=14)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|top (pressure-outlet, id=14)"))(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Pressure Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|top (pressure-outlet, id=14)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*velocity-inlet")(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|cord (wall, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|cord (wall, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|cord (wall, id=28)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 10)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-enable-apply-button "Wall")(cx-gui-do cx-set-toggle-button2 "Wall*Frame4*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall" #t)(cx-gui-do cx-activate-item "Wall*Frame4*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall")(cx-gui-do cx-set-toggle-button2 "Wall*Frame4*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox2*Components" #t)(cx-gui-do cx-activate-item "Wall*Frame4*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox2*Components")(cx-gui-do cx-set-toggle-button2 "Wall*Frame4*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox1*Absolute" #t)(cx-gui-do cx-activate-item "Wall*Frame4*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*Table2(Motion)*Table1*ToggleBox1*Absolute")(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|cord (wall, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|cord (wall, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|cord (wall, id=28)"))(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|cord (wall, id=28)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*mass-flow-outlet")(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))(cx-gui-do cx-activate-item "Mass-Flow Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)\"))(cx-gui-do cx-set-list-selections \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Mass-Flow Outlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table10*ExpressionEntry1(Mass Flux)\" '(\"inlet_vel x\" . 3))(cx-gui-do create-new-param \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table10*ExpressionEntry1(Mass Flux)\" 0 \"mass-flux\")(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 1)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/(m^2 s)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/(m^2 s)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/(m^2 s)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table10*ExpressionEntry1(Mass Flux)\" '(\"inlet_vel x\" . 3))(cx-gui-do cx-set-list-selections \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0\" . 0))(cx-gui-do cx-activate-item \"Mass-Flow Outlet*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)\"))(cx-gui-do cx-enable-apply-button \"Mass-Flow Outlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0\" . 0))(cx-gui-do cx-enable-apply-button \"Mass-Flow Outlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"\" . 1))(cx-gui-do create-new-param \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" 0 \"mass-flow\")(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0\" . 0))(cx-gui-do cx-set-list-selections \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Mass Flow Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"\" . 1))(cx-gui-do create-new-param \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" 0 \"mass-flow\")(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"\" . 1))(cx-gui-do create-new-param \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" 0 \"mass-flow\")(cx-gui-do cx-set-expression-entry \"Parameter Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Parameter Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Parameter Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Parameter Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Parameter Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [kg/s]\" . 1))(cx-gui-do cx-activate-item \"Parameter Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"\" . 1))(cx-gui-do cx-activate-item \"Mass-Flow Outlet*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Reference Frames"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression Manager*Table1*Table1*ButtonBox2*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-text-entry \"Expression*Table1*TextEntry2(Name)\" \"dm\")(cx-gui-do cx-activate-item \"Expression*Table1*TextEntry2(Name)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-text-entry \"Expression*Table1*TextEntry2(Name)\" \"dm_dt\")(cx-gui-do cx-activate-item \"Expression*Table1*TextEntry2(Name)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow([<lo],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['bottom'],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['bottom'],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['bottom'],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['bottom'],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['bottom'],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['bottom'],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['bottom'],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['bottom'],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['bottom'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['bottom'])\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression Manager*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*Table2*ButtonBox1*PushButton2(Profiles)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Profiles*List1(Profile)\" '( 1))(cx-gui-do cx-activate-item \"Profiles*List1(Profile)\")(cx-gui-do cx-set-list-selections \"Profiles*List1(Profile)\" '( 2))(cx-gui-do cx-activate-item \"Profiles*List1(Profile)\")(cx-gui-do cx-set-list-selections \"Profiles*List1(Profile)\" '( 1))(cx-gui-do cx-activate-item \"Profiles*List1(Profile)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*Table7*Table1*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=14)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=14)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=14)\"))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table9*ExpressionEntry1(Velocity Magnitude)\" '(\"top_vel u1\" . 3))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-dm_dt*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command='(cx-use-window-id 51)(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="""(cx-use-window-id 51)(cx-set-camera-relative '(-0.0253835 -0.00471588 -0.0020338) '(0 0 0) '(0.0442702 -0.00162101 0.0358112) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.00204777 -0.0367418 -0.0125668) '(0 0 0) '(0.0322046 -0.206823 0.570488) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.00417802 0.0644894 0.0258318) '(0 0 0) '(0.0161472 0.197707 -0.493198) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.00107517 0.0273095 -8.24779e-05) '(0 0 0) '(0.021766 -7.34925e-05 -0.204927) 0 0)(cx-use-window-id 51)(cx-set-camera '(-0.00406872 -0.00513718 0.0728796) '(0.00888501 -0.0186956 -0.0570419) '(0.114388 0.989188 -0.0918254) 0.0371281 0.0371281 \"orthographic\")
(cx-use-window-id 51)(cx-set-camera-relative '(-0.00495895 -0.0345449 -0.00226882) '(0 0 0) '(-0.0542027 -0.0128151 0.299396) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.00138613 -0.00225028 -0.000285417) '(0 0 0) '(0.00357768 -0.00423825 0.0180444) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|dm_dt\"))""")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|dm_dt\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['top'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['top'])\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-dm_dt*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=14)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=14)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=14)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0824375 0.0156851 -0.0470154) '(0 0 0) '(0.437508 -0.560816 0.53568) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.140099 0.195355 0.0155223) '(0 0 0) '(0.352034 0.0372216 -0.495373) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0547637 -0.331149 0.0213173) '(0 0 0) '(-0.977468 0.398676 0.250649) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0529725 -0.0158087 0.0046193) '(0 0 0) '(-0.0407985 -0.0311253 0.037348) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.205056 -0.0230924 -0.0681576) '(0 0 0) '(-0.682604 -0.980781 -0.0493756) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0469801 0.188983 0.0603377) '(0 0 0) '(0.0836163 -0.0978606 0.0849541) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|fm\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|fm\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-fm*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=14)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-top (velocity-inlet, id=14)*Display")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0438713 0.00951812 0.0301335) '(0 0 0) '(-0.0788573 -0.0157402 -0.128741) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system3 = GetSystem(Name="Geom")
geometry1 = system3.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
geometry1.Exit()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent2.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',r'NumParts': 1,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['wall_sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.0005,r'BOIZoneorLabel': r'label',r'CompleteFaceLabelList': [r'cord', r'dura', r'tonsils'],r'DrawSizeControl': True,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['wall_sizing'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.001,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.142576 -0.362203 -0.00301871) '(0 0 0) '(0.342452 0.0977079 1.07224) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0333777 0.0739402 0.0465213) '(0 0 0) '(-0.322796 0.0099569 -0.247545) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(handle-key \"control s\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'bottom', r'cord'],r'BoundaryLabelTypeList': [r'velocity-inlet', r'wall'],r'OldBoundaryLabelList': [r'bottom', r'cord'],r'OldBoundaryLabelTypeList': [r'wall', r'wall'],r'OldLabelZoneList': [r'cord', r'bottom', r'top'],})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.2_workflow_files\\FLTG.2.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.2_workflow_files\\FLTG.2.wft')\")")
geometry1.Edit(IsSpaceClaimGeometry=True)
Save(Overwrite=True)
geometry1.Exit()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent2.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIGrowthRate': 1.2,r'BOIZoneorLabel': r'label',})\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*Cancel")')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['wall_sizing'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'bottom', r'cord', r'top'],r'BoundaryLabelTypeList': [r'velocity-inlet', r'wall', r'velocity-inlet'],r'OldBoundaryLabelList': [r'bottom', r'cord', r'top'],r'OldBoundaryLabelTypeList': [r'wall', r'wall', r'wall'],r'OldLabelZoneList': [r'cord', r'bottom', r'top'],})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['boundary_layers'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.4_workflow_files\\FLTG.4.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.4_workflow_files\\FLTG.4.wft')\")")
Save(Overwrite=True)
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="""(cx-use-window-id 51)(cx-use-window-id 51)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(bottom top) (cx-active-window))(cx-use-window-id 51)(cx-set-camera '(-0.00333961 -0.0178348 0.0654574) '(-0.00333961 -0.0178348 -0.0572335) '(-1.44355e-08 1 -7.45058e-09) 0.0347022 0.0347022 \"orthographic\")
(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(top) (cx-active-window))(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0292412 -0.0146612 -0.0345941) '(0 0 0) '(0.0130893 -0.018082 0.188859) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0108537 -0.0255927 -0.00342517) '(0 0 0) '(-0.0244908 -0.0395553 0.145546) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Graphics|Contours|boundary-velocities\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )""")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuTree-boundary-velocities*Display\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Mass-Flow Outlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Mass-Flow Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-dm_dt*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|dm_dt\"))(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 1)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['top'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['top'])+MassFlow(['top'])\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['top'])+MassFlow(['b'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['top'])+MassFlow(['bo'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['top'])+MassFlow(['bot'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['top'])+MassFlow(['bottom'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"MassFlow(['top'])+MassFlow(['bottom'])\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-dm_dt*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|dm_dt\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-dm_dt*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)\"))(cx-gui-do cx-enable-apply-button \"Mass-Flow Outlet\")(cx-gui-do cx-set-expression-entry \"Mass-Flow Outlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Mass Flow Rate)\" '(\"dm_dt\" . 1))(cx-gui-do cx-activate-item \"Mass-Flow Outlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Outlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-enable-apply-button "Mass-Flow Outlet")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mass-Flow Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table9(Solution Advancement)*Table1*PushButton1(Calculate)")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Contours*New...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '())(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 52)(cx-set-camera-relative '(0.0410291 0.152529 -0.0670019) '(0 0 0) '(-0.403059 -0.300674 -0.590335) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-0.0441196 -0.192782 0.00260887) '(0 0 0) '(0.26775 0.0260168 1.2653) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-0.0490975 0.00797043 -0.103835) '(0 0 0) '(-0.456013 -0.642583 0.127225) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(0.132712 0.000804231 0.0519024) '(0 0 0) '(-0.0120918 -0.822724 -0.504919) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-0.110937 0.134737 -0.00421324) '(0 0 0) '(0.769432 0.717204 0.688603) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(0.0819397 -0.00386151 -0.0276965) '(0 0 0) '(-0.100686 0.229432 -0.00962746) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-0.0583664 -0.0111495 0.0789934) '(0 0 0) '(-0.149531 -0.885104 -0.246394) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-0.0050511 0.0214616 -0.0690178) '(0 0 0) '(0.200387 0.809752 0.254682) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(0.0581938 -0.00571271 0.0169104) '(0 0 0) '(-0.446591 -0.0672982 -0.0428373) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(0.0135001 -0.0157636 0.0269196) '(0 0 0) '(0.222296 -0.457269 -0.028605) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-0.0912965 0.0138158 -0.0480119) '(0 0 0) '(0.371833 0.680402 0.00781101) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(0.0449867 -0.00134788 -0.0310726) '(0 0 0) '(-0.433987 0.206227 -0.0678687) 0 0)(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))(cx-gui-do cx-activate-item "Mass-Flow Outlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Outlet|cord (mass-flow-outlet, id=28)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*velocity-inlet")(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|dm_dt\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/1000\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/1000\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1643)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1643)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1643)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Named Expressions*New...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-text-entry \"Expression*Table1*TextEntry2(Name)\" \"rho\")(cx-gui-do cx-activate-item \"Expression*Table1*TextEntry2(Name)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"1000 kg/m^3\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"1000 kg/m^3\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|rho (Invalid)\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"1000 kg/m^3\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"1000 [kg/m^3\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"1000 [kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"1000 [kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Curvilinear Coordinate System"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-rho*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1643)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1643)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1643)"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Materials|Fluid|csf\"))(cx-gui-do cx-set-list-selections \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\" '( 13))(cx-gui-do cx-activate-item \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\" '( 16))(cx-gui-do cx-activate-item \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\")(cx-gui-do cx-set-expression-entry \"Parameter Expression*Table1*ExpressionEntry3(Definition)\" '(\"1000 [kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Parameter Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\" '( 0))(cx-gui-do cx-activate-item \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\")(cx-gui-do cx-set-list-selections \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\" '( 15))(cx-gui-do cx-activate-item \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\")(cx-gui-do cx-activate-item \"Error*Cancel\")(cx-gui-do cx-set-list-selections \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\" '( 13))(cx-gui-do cx-activate-item \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\")(cx-gui-do cx-activate-item \"Create/Edit Materials*PanelButtons*PushButton1(Close)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-rho*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|dm_dt\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/1000\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-dm_dt*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|dm_dt\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dm_dt"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|dm_dt\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-text-entry \"Expression*Table1*TextEntry2(Name)\" \"v_cord\")(cx-gui-do cx-activate-item \"Expression*Table1*TextEntry2(Name)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|v_cord\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)\"))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table9*ExpressionEntry1(Velocity Magnitude)\" '(\"0\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|v_cord\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-v_cord*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)\"))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")(cx-gui-do create-new-param \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table9*ExpressionEntry1(Velocity Magnitude)\" 0 \"velocity\")(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [cm/s]\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table9*ExpressionEntry1(Velocity Magnitude)\" '(\"0\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|v_cord\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)\"))(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Velocity Specification Method)\" '( 0))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Velocity Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Velocity Specification Method)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Velocity Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table9*ExpressionEntry1(Velocity Magnitude)\" '(\"v_cord\" . 1))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table9*ExpressionEntry1(Velocity Magnitude)\" '(\"v_cord\" . 1))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-cord (velocity-inlet, id=28)*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 3 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 52)(cx-set-camera-relative '(0.0218074 0.02175 0.119876) '(0 0 0) '(-0.0175169 -0.578667 0.125508) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-0.0399997 -0.0412365 0.102374) '(0 0 0) '(-0.0488075 -0.541015 -0.235672) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(0.0236451 -0.0348179 -0.283098) '(0 0 0) '(0.218635 1.43068 -0.148954) 0 0)(cx-use-window-id 52)(cx-set-camera-relative '(-0.0104315 0.0261176 0.0215857) '(0 0 0) '(-0.00834129 -0.09327 0.108735) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=14)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=14)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=14)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-boundary-velocities*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 52)(cx-set-camera-relative '(-0.0111082 -0.00768732 0.158209) '(0 0 0) '(0.00415243 -1.48652 -0.0715045) 0 0)(cx-use-window-id 52)(cx-use-window-id 52)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-v_cord*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-boundary-velocities*Display")')
setup1.SendCommand(Command='(cx-use-window-id 52)(cx-use-window-id 52)(cx-use-window-id 52)(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization" #t)(cx-gui-do cx-activate-item "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization")(cx-gui-do cx-set-toggle-button2 "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Hybrid  Initialization" #t)(cx-gui-do cx-activate-item "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Hybrid  Initialization")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table9(Solution Advancement)*Table1*PushButton1(Calculate)")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|boundary-velocities"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-boundary-velocities*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-v_cord*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q_bottom"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-q_bottom*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q_bottom"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q_bottom"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q_bottom\"))(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0 7))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0 3 7))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Surface Report Definition*Table1*Table1*Table2(Options)*CheckButton6(Per Surface)" #t)(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table1*Table2(Options)*CheckButton6(Per Surface)")(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q_bottom"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-q_bottom*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 52)(cx-set-camera-relative '(-0.0223377 0.0144971 -0.0210893) '(0 0 0) '(0.259618 0.260349 0.192515) 0 0)(cx-use-window-id 52)(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|fm""Results|Surfaces|fm-25""Results|Surfaces|wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|fm""Results|Surfaces|fm-25""Results|Surfaces|wall"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|dp (Invalid)\"))(cx-gui-do cx-activate-item \"Warning*Cancel\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'], Weight ='Area') - Average(StaticPressure,['fm-25'], Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'], Weight ='Area') - Average(StaticPressure,['fm-25'], Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'], Weight ='Area') - Average(StaticPressure,['fm-25'], Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton1(Display)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 5 6))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c02c03"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|fm""Results|Surfaces|fm-25"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=28)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|v_cord\"))(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 1)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|wall"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-wall*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton1(Display)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces\"))(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton4(Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 5))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 5 6))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*Table1*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 6))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton4(Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 6))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Surfaces*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton4(Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 6))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton4(Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton4(Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Surfaces*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton4(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 51)(handle-key "")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="/plane-surface q q q yz-plane 10.45853085815907")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|q"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|q"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-q*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Animations|Scene Animation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="/list-surfaces")
setup1.SendCommand(Command="/delete-surface #f")
setup1.SendCommand(Command="/list-surfaces")
setup1.SendCommand(Command="/delete-surface fm")
setup1.SendCommand(Command="/list-surfaces")
setup1.SendCommand(Command="/delete-surface 11")
setup1.SendCommand(Command="/list-surfaces")
setup1.SendCommand(Command="/delete-surface #f")
setup1.SendCommand(Command="/list-surfaces")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Surface)*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Surface)*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Surface)*PushButton2(Manage)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton4(Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 3 5))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*Table1*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 5))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton4(Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton4(Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton4(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="/list-surfaces")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Surface)*PushButton2(Manage)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Surface)*PushButton2(Manage)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Surface)*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|tonsils (wall, id=29)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|tonsils (wall, id=29)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|tonsils (wall, id=29)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 10)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|rho\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"1000 [kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|v_cord\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|v_cord\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|dp (Invalid)\"))(cx-gui-do cx-activate-item \"Warning*Cancel\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'], Weight ='Area') - Average(StaticPressure,['fm-25'], Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|v_cord\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="/define/named-expressions/add \"caca\" definition \"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" quit")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|caca"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|caca"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|caca\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|caca"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|v_cord\"))(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 1)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|rho\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"1000 [kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"1000 [kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet cord no no yes yes no "v_cord" no 0.')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command='(cx-use-window-id 51)(handle-key "")(cx-use-window-id 51)(handle-key "")')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet cord no no yes yes no "v_cord" no 0.')
setup1.SendCommand(Command="/define/boundary-conditions/fluid fluid yes csf no no no no 0. no 0. no 0. no 0 no 0 no 1 no no no no")
setup1.SendCommand(Command="/define/materials/list-materials")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-csf*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton4(Delete)")(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton4(Delete)")(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="/define/materials/change-create")
setup1.SendCommand(Command="/define/materials/change-create")
setup1.SendCommand(Command="/define/materials/list-materials")
setup1.SendCommand(Command="/define/materials/change-create")
setup1.SendCommand(Command="/define/materials/change-create")
setup1.SendCommand(Command="/define/materials/list-properties csf")
setup1.SendCommand(Command="/define/materials/copy fluid")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Fluid*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Fluid*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setupComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=12, NumberOfProcessors=12))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*rotate")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0972671 -0.048022 -0.0393645) '(0 0 0) '(-0.815194 -1.11961 0.566711) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0383921 0.110036 -0.0500259) '(0 0 0) '(0.731655 -0.593214 0.129653) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.4_workflow_files\\FLTG.4.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.4_workflow_files\\FLTG.4.wft')\")")
meshComponent2.Reset()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.4_workflow_files\\FLTG.4.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.4_workflow_files\\FLTG.4.wft')\")")
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
meshComponent2.Refresh()
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Arguments.set_state({r'FileName': r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\Geom\\DM\\Geom.scdoc',r'ImportCadPreferences': {r'MaxFacetLength': 0,},r'LengthUnit': r'm',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Import Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].Arguments.set_state({r'AddChild': r'yes',r'BOICellsPerGap': 1,r'BOIControlName': r'wall_sizing',r'BOICurvatureNormalAngle': 18,r'BOIExecution': r'Face Size',r'BOIFaceLabelList': [r'cord', r'dura', r'tonsils'],r'BOIGrowthRate': 1.1,r'BOISize': 0.001,r'BOIZoneorLabel': r'label',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Local Sizing'].AddChildAndUpdate(DeferUpdate=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Arguments.set_state({r'CFDSurfaceMeshControls': {r'MaxSize': 0.004,r'MinSize': 0.001,},})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state(None)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Surface Mesh'].InsertNextTask(CommandName=r'ImproveSurfaceMesh')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Arguments.set_state({r'FaceQualityLimit': 0.7,r'MeshObject': r'',r'SMImprovePreferences': {r'AdvancedImprove': r'no',r'AllowDefeaturing': r'no',r'SIQualityCollapseLimit': 0.85,r'SIQualityIterations': 5,r'SIQualityMaxAngle': 160,r'SIRemoveStep': r'no',r'SIStepQualityLimit': 0,r'SIStepWidth': 0,r'ShowSMImprovePreferences': False,},r'SQMinSize': 0.001,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Surface Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Arguments.set_state({r'NonConformal': r'No',r'SetupType': r'The geometry consists of only fluid regions with no voids',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].UpdateChildTasks(SetupTypeChanged=True)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Describe Geometry'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Arguments.set_state({r'BoundaryLabelList': [r'top', r'bottom', r'cord'],r'BoundaryLabelTypeList': [r'velocity-inlet', r'velocity-inlet', r'velocity-inlet'],r'OldBoundaryLabelList': [r'top', r'bottom', r'cord'],r'OldBoundaryLabelTypeList': [r'wall', r'wall', r'wall'],})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Boundaries'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Arguments.set_state({r'OldRegionNameList': [r'patch-body1'],r'OldRegionTypeList': [r'fluid'],r'RegionNameList': [r'fluid'],r'RegionTypeList': [r'fluid'],})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Update Regions'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].Arguments.set_state({r'BLControlName': r'boundary_layers',r'LocalPrismPreferences': {r'Continuous': r'Continuous',},r'Rate': 1.1,})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Add Boundary Layers'].AddChildAndUpdate(DeferUpdate=False)\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Arguments.set_state({r'VolumeFill': r'polyhedra',})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].Execute()\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Generate the Volume Mesh'].InsertNextTask(CommandName=r'ImproveVolumeMesh')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Arguments.set_state({r'CellQualityLimit': 0.3,r'QualityMethod': r'Orthogonal',r'VMImprovePreferences': {r'ShowVMImprovePreferences': False,r'VIQualityIterations': 5,r'VIQualityMinAngle': 0,r'VIgnoreFeature': r'yes',},})\")")
setup1.SendCommand(Command="(%py-exec \"workflow.TaskObject['Improve Volume Mesh'].Execute()\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.1_workflow_files\\FLTG.1.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent\\FLTG.1_workflow_files\\FLTG.1.wft')\")")
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command="/file/set-tui-version \"24.1\"(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.00325301 -0.0323123 -0.0226808) '(0 0 0) '(0.0417599 -0.0362422 0.263501) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0322128 -0.126638 -0.0990849) '(0 0 0) '(-0.328282 -0.445527 0.542327) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.026272 -0.0159639 -0.035511) '(0 0 0) '(-0.00670314 -0.28797 0.122081) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setupComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=12, NumberOfProcessors=12))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command="/file/set-tui-version \"24.1\"(cx-use-window-id 51)(cx-set-camera-relative '(0.0158127 -0.00825515 -0.00114267) '(0 0 0) '(0.0292108 -0.00199741 0.056085) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.040218 -0.122953 -0.0456645) '(0 0 0) '(-0.442579 -0.341917 0.575334) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Cell Zone Conditions|Fluid\"))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|v_cord\"))(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 1)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=27)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=27)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=27)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Start Journal...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/bc_jou\") \"All Files (*)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|mu"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|mu"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|mu\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m*s)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m*s)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m*s)]\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|mu"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|mu"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|mu\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(ms)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m s)]\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|mu"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|mu"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|mu\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m s)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m s)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m s)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m s)]\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|mu"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|mu"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|mu\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m s)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m*s)]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0.0007 [kg/(m*s)]\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='/define/materials/change-create air csf yes expression "rho" no no yes expression "mu" no no no yes')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command="/define/models/unsteady-1st-order? yes")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command="/define/models/unsteady-1st-order?")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command="/define/models/unsteady-2nd-order? yes")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command="/define/models/unsteady-1st-order? yes")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command="/define/models/unsteady-2nd-order? yes")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1054)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1054)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1054)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setupComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=12, NumberOfProcessors=12))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-activate-item \"Question*OK\")(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.148262 -0.0358112 -0.096202) '(0 0 0) '(-0.44021 -0.996897 0.897895) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|General\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton4(Units)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Set Units*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton1(Scale)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Scale Mesh*Table1*DropDownList3(View Length Unit In)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*Table1*DropDownList3(View Length Unit In)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Scale Mesh*Table1*DropDownList3(View Length Unit In)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*Table1*DropDownList3(View Length Unit In)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton4(Units)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Set Units*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton1(Scale)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*NewSubMenu*Plane...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton4(Units)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Set Units*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton1(Scale)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Scale Mesh*Table1*DropDownList3(View Length Unit In)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*Table1*DropDownList3(View Length Unit In)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*NewSubMenu*Plane...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton1(Scale)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='/define/units velocity "m/s"')
setup1.SendCommand(Command="/mesh/scale 1. 1. 1.")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton1(Scale)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Scale Mesh*Table1*Table2(Scaling)*DropDownList2(Mesh Was Created In)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*Table1*Table2(Scaling)*DropDownList2(Mesh Was Created In)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Scale Mesh*Table1*Table2(Scaling)*DropDownList2(Mesh Was Created In)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*Table1*Table2(Scaling)*DropDownList2(Mesh Was Created In)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="/mesh/size-info")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton1(Scale)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="/mesh/scale 1. 1. 1.")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton4(Units)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 1))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 3))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setupComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=12, NumberOfProcessors=12))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='/define/named-expressions/add "rho" definition "1000 [kg/m^3]" quit')
setup1.SendCommand(Command='/define/named-expressions/add "mu" definition "0.0007 [kg/(m*s)]" quit')
setup1.SendCommand(Command='/define/materials/change-create air csf yes expression "rho" no no yes expression "mu" no no no yes')
setup1.SendCommand(Command="/define/models/unsteady-2nd-order? yes")
setup1.SendCommand(Command="/define/named-expressions/add \"v_cord\" definition \"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" quit")
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet cord no no yes yes no "v_cord" no 0')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command="/surface/plane-surface fm three-points -0.011573 -0.026052 -0.06506099999999999 0.008188000000000001 0.013123 -0.064267 0.02816 0.01292 -0.06324100000000001 no")
setup1.SendCommand(Command="/surface/plane-surface fm-25 three-points -0.011573 -0.026052 -0.090061 0.008188000000000001 0.013123 -0.089267 0.02816 0.01292 -0.088241 no")
setup1.SendCommand(Command="/surface/plane-surface c01c02 three-points -0.009927 -0.027567 -0.07265000000000001 0.009833 0.0116 -0.071502 0.029805 0.011387 -0.070468 no")
setup1.SendCommand(Command="/surface/plane-surface c02c03 three-points -0.009152 -0.032727 -0.095003 0.01061 0.006441 -0.09603200000000001 0.030586 0.006282 -0.09504799999999999 no")
setup1.SendCommand(Command='/surface/zone-surface cord_s "cord"')
setup1.SendCommand(Command='/surface/zone-surface dura_s "dura"')
setup1.SendCommand(Command='/surface/zone-surface tonsils_s "tonsils"')
setup1.SendCommand(Command="/surface/group-surfaces cord_s dura_s tonsils_s () wall")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-fm*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-fm*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-fm-25*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c02c03"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c02c03"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-c02c03*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Mesh Display*fl_mesh_svg_graphics_toolbar")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 5))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 5 6 7 8 9))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0343887 -0.0673925 -0.0524623) '(0 0 0) '(-0.160387 -0.549109 0.878054) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0409979 0.0447775 0.0745485) '(0 0 0) '(0.155667 0.374788 -0.313929) 0 0)(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 6 7 8 9))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 5))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0240233 -0.0153026 -0.00879998) '(0 0 0) '(0.0558502 -0.0687932 0.0874243) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.00399598 0.0288324 0.0160671) '(0 0 0) '(-0.000737317 0.195357 -0.350383) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.00113957 -0.019486 -0.00917418) '(0 0 0) '(-0.0244559 -0.109511 0.236554) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 6))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q_top"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q_top"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q_top"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q_top"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-q_top*Compute")(cx-gui-do cx-activate-item "Error*Cancel")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command="/define/models/unsteady-2nd-order-bounded? yes")
setup1.SendCommand(Command="/solve/set/p-v-coupling 20")
setup1.SendCommand(Command="/solve/set/p-v-coupling 20")
setup1.SendCommand(Command="/solve/set/p-v-coupling 24")
setup1.SendCommand(Command="/solve/set/p-v-coupling 20")
setup1.SendCommand(Command="/solve/set/p-v-coupling 24")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setupComponent1.Reset()
setupComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=12, NumberOfProcessors=12))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton1(Scale)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Solid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Fluid|csf"))(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1054)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1054)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Fluid|fluid (fluid, id=1054)"))(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 1)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 2)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 3)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 4)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 5)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 6)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 7)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 8)(cx-gui-do cx-activate-tab-index "Fluid*Frame2*Table3*Frame1" 0)(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=27)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=27)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=27)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=30)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=30)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=30)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=30)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|dura (wall, id=29)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|dura (wall, id=29)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|dura (wall, id=29)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 10)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|tonsils (wall, id=28)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|tonsils (wall, id=28)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|tonsils (wall, id=28)"))(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 10)(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|v_cord\"))(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 1)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=30)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=30)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=30)"))(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="/solve/initialize/initialize-flow")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|rho"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-rho*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-v_cord*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 6))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 9))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=26)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-set-toggle-button2 "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Hybrid  Initialization" #t)(cx-gui-do cx-activate-item "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Hybrid  Initialization")')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=27)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=27)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|cord (velocity-inlet, id=27)"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Curvilinear Coordinate System"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Curvilinear Coordinate System"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Curvilinear Coordinate System"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|v_cord"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-v_cord*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|wall"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 3 9))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0321788 -0.161421 -0.207403) '(0 0 0) '(-0.309926 -1.16106 0.937022) 0 0)(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0197992 -0.112074 -0.0617399) '(0 0 0) '(-0.0827937 -0.440609 0.824759) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0276083 0.0880696 0.0593727) '(0 0 0) '(0.122362 0.424434 -0.650043) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0136449 -0.0529848 -0.042607) '(0 0 0) '(-0.0435054 -0.226165 0.477925) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.114803 0.0853738 0.020317) '(0 0 0) '(0.0598655 0.133461 -0.202327) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.031051 0.0778806 0.0247497) '(0 0 0) '(0.121212 0.092217 -0.491275) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.00395609 -0.0412814 -0.00281441) '(0 0 0) '(-0.0738503 -0.00870919 0.239561) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Run Calculation\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table9(Solution Advancement)*Table1*PushButton1(Calculate)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-use-window-id 51)(cx-set-camera-relative '(-0.0412736 -0.0371449 -0.030562) '(0 0 0) '(-0.236562 -0.0584006 0.179265) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0245106 0.0517204 -0.00436997) '(0 0 0) '(0.332288 0.0343009 -0.139307) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q_bottom\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q_bottom"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q_bottom\"))(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table2(Options)*CheckButton6(Per Surface)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table2(Options)*CheckButton6(Per Surface)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0 3))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0 3 9))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0058921 -0.0497515 -0.00989897) '(0 0 0) '(-0.282111 -0.0578797 0.2045) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0263336 0.0395844 0.0312191) '(0 0 0) '(0.220153 0.078478 -0.247721) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.00027173 0.0029625 0.000210747) '(0 0 0) '(-0.0838063 0.0187081 -0.0632912) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0302827 -0.0113969 -0.0227652) '(0 0 0) '(0.00369107 -0.031496 0.147944) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setupComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=10, NumberOfProcessors=10))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='/define/named-expressions/add "rho" definition "1000 [kg/m^3]" quit')
setup1.SendCommand(Command='/define/named-expressions/add "mu" definition "0.0007 [kg/(m*s)]" quit')
setup1.SendCommand(Command='/define/materials/change-create air csf yes expression "rho" no no yes expression "mu" no no no yes')
setup1.SendCommand(Command="/define/models/unsteady-2nd-order? yes")
setup1.SendCommand(Command="/solve/set/p-v-coupling 24")
setup1.SendCommand(Command="/define/named-expressions/add \"v_cord\" definition \"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" quit")
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet cord no no yes yes no "v_cord" no 0')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command="/surface/plane-surface fm three-points -0.011573 -0.026052 -0.06506099999999999 0.008188000000000001 0.013123 -0.064267 0.02816 0.01292 -0.06324100000000001 no")
setup1.SendCommand(Command="/surface/plane-surface fm-25 three-points -0.011573 -0.026052 -0.090061 0.008188000000000001 0.013123 -0.089267 0.02816 0.01292 -0.088241 no")
setup1.SendCommand(Command="/surface/plane-surface c01c02 three-points -0.009927 -0.027567 -0.07265000000000001 0.009833 0.0116 -0.071502 0.029805 0.011387 -0.070468 no")
setup1.SendCommand(Command="/surface/plane-surface c02c03 three-points -0.009152 -0.032727 -0.095003 0.01061 0.006441 -0.09603200000000001 0.030586 0.006282 -0.09504799999999999 no")
setup1.SendCommand(Command='/surface/zone-surface cord_s "cord"')
setup1.SendCommand(Command='/surface/zone-surface dura_s "dura"')
setup1.SendCommand(Command='/surface/zone-surface tonsils_s "tonsils"')
setup1.SendCommand(Command="/surface/group-surfaces cord_s dura_s tonsils_s () wall")
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command="/solve/report-definitions/add pilot volume-max field velocity-magnitude zone-names fluid () quit")
setup1.SendCommand(Command='/solve/report-files/add pilot_variables frequency 1 name "pilot_variables" report-defs flow-time () quit')
setup1.SendCommand(Command="/solve/report-plots/add pilot quit")
setup1.SendCommand(Command="/solve/report-plots/delete-all yes")
setup1.SendCommand(Command="/solve/report-files/delete-all yes")
setup1.SendCommand(Command="/solve/report-definitions/delete-all yes")
setup1.SendCommand(Command="/solve/report-definitions/add u_max volume-max field velocity-magnitude zone-names fluid () quit")
setup1.SendCommand(Command="/solve/report-definitions/add q_bottom surface-volumeflowrate surface-names bottom () quit")
setup1.SendCommand(Command="/solve/report-definitions/add q_top surface-volumeflowrate surface-names top () quit")
setup1.SendCommand(Command="/solve/report-definitions/add dp single-val-expression define \"Average(StaticPressure,['fm'], Weight ='Area') - Average(StaticPressure,['fm-25'], Weight ='Area')\" quit")
setup1.SendCommand(Command='/solve/report-files/add c2_variables frequency 1 name "c2_variables" report-defs flow-time dp q_bottom q_top u_max () quit')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='/file/transient-export/ascii "C:/Users/guill/Documents/chiari/computations/ansys/s101/outputs/c2_report" fm c01c02 c02c03 bottom fm-25 top () pressure x-velocity y-velocity z-velocity quit no no c2_report "time-step" 1 time-step')
setup1.SendCommand(Command="/solve/initialize/set-defaults/")
setup1.SendCommand(Command='/solve/initialize/set-hyb-initialization/general-settings/ 10 1. 1. "relative" no no no')
setup1.SendCommand(Command="/solve/initialize/initialize-flow")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setupComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessorsMeshing=12, NumberOfProcessors=12))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='/define/named-expressions/add "rho" definition "1000 [kg/m^3]" quit')
setup1.SendCommand(Command='/define/named-expressions/add "mu" definition "0.0007 [kg/(m*s)]" quit')
setup1.SendCommand(Command='/define/materials/change-create air csf yes expression "rho" no no yes expression "mu" no no no yes')
setup1.SendCommand(Command="/define/models/unsteady-2nd-order? yes")
setup1.SendCommand(Command="/solve/set/p-v-coupling 24")
setup1.SendCommand(Command="/define/named-expressions/add \"v_cord\" definition \"-(MassFlow(['top'])+MassFlow(['bottom']))/(rho*Area(['cord']))\" quit")
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet cord no no yes yes no "v_cord" no 0')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command="/surface/plane-surface fm three-points -0.011573 -0.026052 -0.06506099999999999 0.008188000000000001 0.013123 -0.064267 0.02816 0.01292 -0.06324100000000001 no")
setup1.SendCommand(Command="/surface/plane-surface fm-25 three-points -0.011573 -0.026052 -0.090061 0.008188000000000001 0.013123 -0.089267 0.02816 0.01292 -0.088241 no")
setup1.SendCommand(Command="/surface/plane-surface c01c02 three-points -0.009927 -0.027567 -0.07265000000000001 0.009833 0.0116 -0.071502 0.029805 0.011387 -0.070468 no")
setup1.SendCommand(Command="/surface/plane-surface c02c03 three-points -0.009152 -0.032727 -0.095003 0.01061 0.006441 -0.09603200000000001 0.030586 0.006282 -0.09504799999999999 no")
setup1.SendCommand(Command='/surface/zone-surface cord_s "cord"')
setup1.SendCommand(Command='/surface/zone-surface dura_s "dura"')
setup1.SendCommand(Command='/surface/zone-surface tonsils_s "tonsils"')
setup1.SendCommand(Command="/surface/group-surfaces cord_s dura_s tonsils_s () wall")
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command="/solve/report-definitions/add pilot volume-max field velocity-magnitude zone-names fluid () quit")
setup1.SendCommand(Command='/solve/report-files/add pilot_variables frequency 1 name "pilot_variables" report-defs flow-time () quit')
setup1.SendCommand(Command="/solve/report-plots/add pilot quit")
setup1.SendCommand(Command="/solve/report-plots/delete-all yes")
setup1.SendCommand(Command="/solve/report-files/delete-all yes")
setup1.SendCommand(Command="/solve/report-definitions/delete-all yes")
setup1.SendCommand(Command="/solve/report-definitions/add u_max volume-max field velocity-magnitude zone-names fluid () quit")
setup1.SendCommand(Command="/solve/report-definitions/add q_bottom surface-volumeflowrate surface-names bottom () quit")
setup1.SendCommand(Command="/solve/report-definitions/add q_top surface-volumeflowrate surface-names top () quit")
setup1.SendCommand(Command="/solve/report-definitions/add q_cord surface-volumeflowrate surface-names cord () quit")
setup1.SendCommand(Command="/solve/report-definitions/add dp single-val-expression define \"Average(StaticPressure,['fm'], Weight ='Area') - Average(StaticPressure,['fm-25'], Weight ='Area')\" quit")
setup1.SendCommand(Command='/solve/report-files/add c2_variables frequency 1 name "c2_variables" report-defs flow-time dp q_bottom q_top q_cord u_max () quit')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='/file/transient-export/ascii "C:/Users/guill/Documents/chiari/computations/ansys/s101/outputs/c2_report" fm c01c02 c02c03 bottom fm-25 top () pressure x-velocity y-velocity z-velocity quit no no c2_report "time-step" 1 time-step')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|c2_variables"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|c2_variables"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|c2_variables"))(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command="time-step 0.01134")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/initialize/initialize-flow")
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command='/file/export/ascii "C:/Users/guill/Documents/chiari/computations/ansys/s101/outputs/surface_mesh" wall () no quit ok')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_3.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_3.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_4.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_4.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_5.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_5.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_6.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_6.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_7.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_7.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_8.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_8.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_9.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_9.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_10.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_10.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_11.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_11.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_12.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_12.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_13.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_13.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_14.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_14.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_15.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_15.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_16.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_16.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_17.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_17.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_18.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_18.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_19.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_19.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_20.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_20.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_21.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_21.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_22.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_22.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_23.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_23.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_24.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_24.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_25.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_25.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_26.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_26.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_27.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_27.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_28.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_28.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_29.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_29.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_30.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_30.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_31.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_31.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_32.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_32.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_33.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_33.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_34.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_34.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_35.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_35.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_36.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_36.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_37.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_37.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_38.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_38.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_39.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_39.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_40.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_40.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_41.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_41.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_42.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_42.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_43.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_43.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_44.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_44.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_45.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_45.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_46.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_46.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_47.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_47.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_48.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_48.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_49.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_49.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_50.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_50.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_51.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_51.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_52.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_52.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_53.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_53.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_54.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_54.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_55.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_55.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_56.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_56.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_57.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_57.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_58.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_58.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_59.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_59.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_60.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_60.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_61.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_61.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_62.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_62.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_63.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_63.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_64.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_64.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_65.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_65.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_66.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_66.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_67.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_67.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_68.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_68.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_69.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_69.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_70.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_70.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_71.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_71.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_72.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_72.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_73.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_73.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_74.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_74.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_75.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_75.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_76.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_76.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_77.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_77.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_78.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_78.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_79.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_79.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_80.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_80.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_81.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_81.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_82.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_82.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_83.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_83.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_84.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_84.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_85.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_85.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_86.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_86.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_87.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_87.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_88.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_88.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_89.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_89.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_90.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_90.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_91.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_91.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_92.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_92.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_93.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_93.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_94.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_94.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_95.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_95.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_96.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_96.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_97.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_97.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_98.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_98.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_99.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_99.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_100.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_100.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_3.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_3.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_4.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_4.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_5.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_5.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_6.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_6.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_7.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_7.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_8.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_8.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_9.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_9.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_10.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_10.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_11.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_11.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_12.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_12.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_13.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_13.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_14.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_14.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_15.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_15.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_16.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_16.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_17.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_17.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_18.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_18.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_19.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_19.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_20.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_20.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_21.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_21.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_22.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_22.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_23.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_23.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_24.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_24.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_25.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_25.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_26.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_26.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_27.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_27.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_28.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_28.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_29.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_29.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_30.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_30.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_31.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_31.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_32.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_32.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_33.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_33.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_34.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_34.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_35.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_35.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_36.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_36.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_37.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_37.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_38.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_38.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_39.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_39.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_40.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_40.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_41.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_41.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_42.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_42.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_43.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_43.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_44.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_44.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_45.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_45.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_46.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_46.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_47.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_47.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_48.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_48.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_49.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_49.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_50.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_50.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_51.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_51.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_52.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_52.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_53.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_53.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_54.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_54.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_55.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_55.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_56.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_56.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_57.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_57.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_58.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_58.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_59.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_59.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_60.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_60.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_61.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_61.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_62.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_62.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_63.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_63.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_64.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_64.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_65.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_65.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_66.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_66.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_67.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_67.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_68.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_68.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_69.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_69.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_70.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_70.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_71.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_71.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_72.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_72.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_73.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_73.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_74.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_74.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_75.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_75.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_76.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_76.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_77.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_77.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_78.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_78.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_79.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_79.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_80.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_80.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_81.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_81.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_82.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_82.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_83.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_83.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_84.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_84.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_85.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_85.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_86.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_86.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_87.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_87.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_88.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_88.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_89.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_89.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_90.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_90.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_91.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_91.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_92.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_92.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_93.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_93.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_94.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_94.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="(cx-use-window-id 51)")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_95.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_95.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_96.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_96.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_97.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_97.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_98.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_98.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_99.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_99.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_100.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_100.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_3.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_3.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_4.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_4.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_5.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_5.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_6.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_6.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_7.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_7.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_8.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_8.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_9.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_9.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_10.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_10.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_11.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_11.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_12.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_12.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_13.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_13.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_14.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_14.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_15.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_15.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_16.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_16.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_17.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_17.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_18.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_18.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_19.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_19.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_20.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_20.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_21.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_21.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_22.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_22.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_23.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_23.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_24.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_24.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_25.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_25.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_26.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_26.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_27.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_27.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_28.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_28.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_29.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_29.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_30.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_30.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_31.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_31.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_32.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_32.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_33.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_33.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_34.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_34.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_35.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_35.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_36.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_36.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_37.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_37.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_38.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_38.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_39.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_39.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_40.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_40.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_41.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_41.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_42.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_42.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_43.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_43.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_44.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_44.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_45.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_45.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_46.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_46.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_47.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_47.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_48.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_48.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_49.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_49.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_50.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_50.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_51.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_51.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_52.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_52.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_53.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_53.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_54.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_54.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_55.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_55.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_56.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_56.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_57.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_57.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_58.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_58.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_59.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_59.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_60.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_60.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_61.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_61.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_62.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_62.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_63.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_63.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_64.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_64.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_65.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_65.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_66.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_66.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_67.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_67.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_68.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_68.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_69.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_69.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_70.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_70.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_71.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_71.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_72.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_72.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_73.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_73.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_74.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_74.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_75.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_75.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_76.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_76.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_77.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_77.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_78.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_78.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_79.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_79.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_80.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_80.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_81.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_81.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_82.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_82.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_83.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_83.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_84.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_84.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_85.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_85.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_86.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_86.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_87.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_87.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_88.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_88.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_89.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_89.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_90.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_90.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_91.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_91.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_92.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_92.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_93.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_93.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_94.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_94.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_95.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_95.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_96.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_96.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_97.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_97.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_98.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_98.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_99.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_99.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_100.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/top_prof_100.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet top no no yes yes yes no "top_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=30)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=30)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|top (velocity-inlet, id=30)\"))(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 1)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 2)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 3)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 4)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 5)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 6)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 7)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 8)(cx-gui-do cx-activate-tab-index \"Velocity Inlet*Frame2*Frame2\" 0)(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Velocity Specification Method)\" '( 1))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*DropDownList7(Velocity Specification Method)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
Save(Overwrite=True)
Open(FilePath="C:/Users/guill/Documents/chiari/computations/ansys/s101/s101.wbpj")
