# encoding: utf-8
# 2024 R1
SetScriptVersion(Version="24.1.144")
system1 = GetSystem(Name="FLTG")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm=-0.000000"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm=-0.000000""Results|Surfaces|fm=-1.250000""Results|Surfaces|fm=-2.500000""Results|Surfaces|plane-20""Results|Surfaces|plane-21""Results|Surfaces|plano_111""Results|Surfaces|plano-3"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm=-0.000000""Results|Surfaces|fm=-1.250000""Results|Surfaces|fm=-2.500000""Results|Surfaces|plane-20""Results|Surfaces|plane-21""Results|Surfaces|plano_111""Results|Surfaces|plano-3"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*rotate")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0686021 -0.105711 -0.0528261) '(0 0 0) '(0.0225309 -0.233325 0.641642) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-FM-25*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-FM*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|FM""Results|Surfaces|FM-25"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM-25"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM-25"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM-25"))(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|C01C02\"))(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table1*Frame4*Table1*Table3(Point 3)*RealEntry1(X)\" '( 0.02980523))(cx-gui-do cx-activate-item \"Plane Surface*Table1*Frame4*Table1*Table3(Point 3)*RealEntry1(X)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C02C03"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C02C03"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C02C03"))(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C02C03"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Display")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.0420764 -0.011076 -0.050801) '(0 0 0) '(0.000680134 -0.220537 0.19574) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|FM\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|FM\"\"Results|Surfaces|FM-25\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|C01C02\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|C01C02\"\"Results|Surfaces|C02C03\"\"Results|Surfaces|FM\"\"Results|Surfaces|FM-25\"\"Results|Graphics\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|C02C03\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|FM-25\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|FM-25\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-FM-25*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Display")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.0533939 0.0681873 -0.0289316) '(0 0 0) '(-0.16023 -0.174287 0.0807537) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.263336 0.0304618 0.100919) '(0 0 0) '(-0.0250793 0.614857 -0.905686) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.194175 -0.12141 -0.0926408) '(0 0 0) '(-0.16679 -0.858741 0.923223) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0628592 0.101493 0.0175004) '(0 0 0) '(-0.0626446 -0.0639698 -0.0177204) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.00651024 0.0622982 -0.00947913) '(0 0 0) '(0.0400347 -0.0138561 0.0169088) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|C01C02\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|C01C02\"\"Results|Surfaces|C02C03\"\"Results|Surfaces|FM\"\"Results|Surfaces|FM-25\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|C01C02\"\"Results|Surfaces|C02C03\"\"Results|Surfaces|FM\"\"Results|Surfaces|FM-25\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|C03C04""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|C03C04""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Display")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.084702 0.145264 0.110372) '(0 0 0) '(-0.0777774 -0.595955 -0.215242) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton2(Display)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.054381 -0.0451975 0.0471481) '(0 0 0) '(-0.0490476 -0.200828 -0.257258) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton1(Display)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)" #f)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)")(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)" #t)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)" #f)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton2(Edges)")(cx-gui-do cx-set-toggle-button2 "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)" #t)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 6))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 6))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.162727 0.0209128 -0.126757) '(0 0 0) '(0.133491 0.593064 0.463685) 0 0)(cx-use-window-id 51)(handle-key \"??\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 6))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 6))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.00697397 0.0129463 -0.00724749) '(0 0 0) '(0.0581898 -0.0341293 0.0134555) 0 0)(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-scale "Mesh Display*Table1*Frame1*Frame3(Transparency)*Scale1" 22)(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame3(Transparency)*Scale1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame4*PushButton2(Interior)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame1*Frame4*PushButton2(Interior)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton4(Colors)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Mesh Colors*Table1*ToggleBox1(Options)*Color by Type" #t)(cx-gui-do cx-activate-item "Mesh Colors*Table1*ToggleBox1(Options)*Color by Type")(cx-gui-do cx-set-toggle-button2 "Mesh Colors*Table1*ToggleBox1(Options)*Color by ID" #t)(cx-gui-do cx-activate-item "Mesh Colors*Table1*ToggleBox1(Options)*Color by ID")(cx-gui-do cx-activate-item "Mesh Colors*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 5 6))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4 5 6 7))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0724972 -0.0821016 0.130585) '(0 0 0) '(-0.409675 -0.314657 -0.426829) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.029088 0.107973 -0.105192) '(0 0 0) '(0.371584 0.196586 0.382377) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.00207281 -0.00793471 -0.139346) '(0 0 0) '(0.608716 0.72338 -0.031898) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.149492 -0.177174 -0.125738) '(0 0 0) '(0.315363 0.381424 -0.912251) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0845628 0.0242101 0.109882) '(0 0 0) '(-0.693356 -1.33814 0.886112) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.102686 0.13762 -0.101795) '(0 0 0) '(0.531232 0.499715 0.0615233) 0 0)(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|FM-25"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton1(Display)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)\" #f)(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)\")(cx-gui-do cx-set-toggle-button2 \"Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)\" #t)(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame1*Frame1*ToggleBox1(Options)*CheckButton3(Faces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 4 5 6 7))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 3 4))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 3 4 6))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.116068 -0.213883 0.054972) '(0 0 0) '(-0.530103 -0.43809 -0.0247665) 0 0)(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0269189 -0.0545785 0.0658799) '(0 0 0) '(-0.109863 0.869839 0.0234852) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0258174 -0.0651075 -0.0254761) '(0 0 0) '(0.200879 0.0330265 0.00782281) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton2(Display)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.0593283 -0.0752199 -0.0651278) '(0 0 0) '(0.221963 -0.205461 0.045347) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.114641 -0.010501 0.13744) '(0 0 0) '(-0.553749 0.198954 -0.105825) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.140162 0.0921685 0.00615862) '(0 0 0) '(-0.129132 -0.165124 0.00485301) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|C03C04\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|C03C04\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-C03C04*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table7*Table1*PushButton2(Browse)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 5 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Automatic Export*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuAutomaticExport*Solution Data Export...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table1*DropDownList2(File Type)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table1*DropDownList2(File Type)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 10 11))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 9 10 11))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 9 11))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 9 10 11))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-set-text-entry \"Automatic Export*Table1*Table1*TextEntry1(Name)\" \"surface_vel\")(cx-gui-do cx-set-text-entry \"Automatic Export*Table1*Table2*Table7*Table1*TextEntry1(File Name)\" \"vel\")(cx-gui-do cx-set-text-entry \"Automatic Export*Table1*Table1*TextEntry1(Name)\" \"vel\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table7*Table1*PushButton2(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"FLTG\") \"ASCII Files ()\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 0 9 10 11))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-activate-item \"Automatic Export*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table7*Table1*PushButton2(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"surface_vel\") \"ASCII Files ()\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Automatic Export*Table1*Table1*TextEntry1(Name)" "surface_vel")(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuAutomaticExport*Solution Data Export...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 2 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 2 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 2 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 2 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 2 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 2 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 2 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 2 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 2 3 4))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 2 3 4))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 2 3 4))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 1 2 3 4))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 1 2 3 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 1 2 3 4))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 1 2 3))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table7*Table1*PushButton2(Browse)")')
setup1.SendCommand(Command=r'(cx-gui-do cx-set-text-entry "Automatic Export*Table1*Table2*Table7*Table1*TextEntry1(File Name)" "C:\Users\guill\Documents\chiari\computations\ansys\s101\s101_files\dp0\FLTG\Fluent/FLTG")(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuAutomaticExport*Solution Data Export...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 9 10 11))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 0 9 10 11))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-set-text-entry \"Automatic Export*Table1*Table1*TextEntry1(Name)\" \"surface-velocity\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table1*DropDownList2(File Type)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table1*DropDownList2(File Type)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Automatic Export*Table1*Table2*Table7*Table1*TextEntry1(File Name)\" \"C:\\Users\\guill\\Documents\\chiari\\computations\\ansys\\s101\\s101_files\\dp0\\FLTG\\Fluent/FLTG\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table7*DropDownList2(Append File Name with)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table7*DropDownList2(Append File Name with)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|FM""Results|Surfaces|FM-25"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Automatic Export*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|C03C04""Results|Surfaces|FM""Results|Surfaces|FM-25"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|C03C04""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|C03C04""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|C01C02""Results|Surfaces|C02C03""Results|Surfaces|C03C04""Results|Surfaces|FM""Results|Surfaces|FM-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Calculation Activities\"))(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 2))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 1))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table3*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 6))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 5))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\" '( 0 1 2 3 4 5 7))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Automatic Export*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|dp (Invalid)\"))(cx-gui-do cx-activate-item \"Warning*Cancel\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm=-0.000000'],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,[''],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,[''],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,[''],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,[''],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,[''],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,[''],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,[''],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,[''],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-list-selections \"Location Selection*List1\" '( 4))(cx-gui-do cx-activate-item \"Location Selection*List1\")(cx-gui-do cx-activate-item \"Location Selection*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm=-2.500000'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,[],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,[],Weight ='Area')\" . 1))(cx-gui-do cx-set-list-selections \"Location Selection*List1\" '( 4 5))(cx-gui-do cx-activate-item \"Location Selection*List1\")(cx-gui-do cx-activate-item \"Location Selection*List1\")(cx-gui-do cx-set-list-selections \"Location Selection*List1\" '())(cx-gui-do cx-activate-item \"Location Selection*List1\")(cx-gui-do cx-set-list-selections \"Location Selection*List1\" '( 5))(cx-gui-do cx-activate-item \"Location Selection*List1\")(cx-gui-do cx-activate-item \"Location Selection*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton1(OK)\")")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow_rate"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow_rate"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow_rate"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow_rate"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow_rate"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow_rate"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-flow_rate*Compute")(cx-gui-do cx-activate-item "Error*Cancel")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow_rate"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-flow_rate*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|mass-flow-rate"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mass-flow-rate*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|mass-flow-rate"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*NewSubMenu*Expression...\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-set-text-entry \"Expression Report Definition*Table1*TextEntry1(Name)\" \"q\")(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*TextEntry1(Name)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"m\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate*d\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate*de\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate*r\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate*r\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate*1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate*1000[kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate*1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate*1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|flow_rate\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|flow_rate\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-flow_rate*Delete")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|mass-flow-rate"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|mass-flow-rate"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|mass-flow-rate"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q\"))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] \" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...],phase = <phase>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow([<location>, ...])\" . 1))(cx-gui-do cx-set-list-selections \"Location Selection*List1\" '( 0))(cx-gui-do cx-activate-item \"Location Selection*List1\")(cx-gui-do cx-activate-item \"Location Selection*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow(['bottom', ...])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow(['bottom', ...])\" . 1))(cx-gui-do cx-set-list-selections \"Location Selection*List1\" '( 0 6))(cx-gui-do cx-activate-item \"Location Selection*List1\")(cx-gui-do cx-activate-item \"Location Selection*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow(['bottom','b 'top'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"mass_flow_rate/1000[kg/m^3] MassFlow(['bottom', 'top'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom', 'top'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom', 'top'])\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom', 'top'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom', 'top])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom', '])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/s]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|mass-flow-rate\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|mass-flow-rate\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|mass-flow-rate"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|mass-flow-rate"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mass-flow-rate*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuTree-q*Edit...\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]*1e6 [ml/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]*1e6 [ml/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]*1e6 [ml/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]*1e6 [ml/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]*1e6 [ml/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]*1e6 [ml/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-q*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q\"))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])*1e6 [ml/m^3]/1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])*1e6 [ml/m^3]/1000[kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]*1e6[l/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]*1e6[l/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]*1e6[l/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|mass-flow-rate\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q\"))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|mass-flow-rate"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|mass-flow-rate"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mass-flow-rate*Delete")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|dp\"))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q\"))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton4(Compute)\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*boxselect")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*rotate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*rotate")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.271725 0.072016 -0.192108) '(0 0 0) '(0.347076 -0.101979 0.27038) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.373106 -0.247212 0.114136) '(0 0 0) '(-1.02114 -0.496356 0.349548) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0723828 -0.093286 -0.0891682) '(0 0 0) '(0.555465 0.0330301 0.272822) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.302886 0.146263 -0.101653) '(0 0 0) '(-0.00375054 0.0697803 -0.0380188) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0188095 0.195441 -0.0346486) '(0 0 0) '(0.250816 0.0286736 -0.0184994) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0922116 0.0165895 0.208542) '(0 0 0) '(0.618351 -0.234545 -0.241972) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.136469 -0.145258 0.0672165) '(0 0 0) '(-0.357424 0.570582 -0.289388) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0699143 0.104641 -0.0116241) '(0 0 0) '(0.0895784 0.00503093 -0.224928) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.14129 -0.224207 -0.0678214) '(0 0 0) '(-0.92442 -0.353812 0.648623) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.21126 0.190119 -0.15553) '(0 0 0) '(0.426177 -0.398985 0.263878) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0111689 0.050429 0.049494) '(0 0 0) '(-0.2182 -0.0313332 -0.0252055) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list ))(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.090711 0.142449 -0.132467) '(0 0 0) '(0.465755 0.0862254 -0.0097003) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0751149 -0.128784 0.17165) '(0 0 0) '(-0.450485 -0.628898 -0.0939) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Curvilinear Coordinate System"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression Manager*Table1*Table1*ButtonBox2*PushButton1(New)")(cx-gui-do cx-activate-tab-index "Expression*Table1*Frame1" 0)(cx-gui-do cx-activate-tab-index "Expression*Table1*Frame1" 1)(cx-gui-do cx-activate-tab-index "Expression*Table1*Frame1" 0)')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(<expr>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(<expr>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(<expr>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(<expr>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(<expr>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-expr1*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression Manager*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-expr1*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression Manager*Table1*Table1*ButtonBox2*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"VelocityMagnitude\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"VelocityMagnitude\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"VelocityMagnitude\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression Manager*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Vertex Maximum...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*DropDownList3(Field Variable)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*DropDownList3(Field Variable)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*DropDownList1(Report Type)\" '( 13))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*DropDownList1(Report Type)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0 4))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 0 4))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 7))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))(cx-gui-do cx-activate-item "Autosave*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities|Execute Commands"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities|Execute Commands"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities|Execute Commands"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q\"))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-set-text-entry \"Expression Report Definition*Table1*TextEntry1(Name)\" \"q-bottom\")(cx-gui-do cx-activate-item \"Expression Report Definition*Table1*TextEntry1(Name)\")(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton1(OK)\")")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression Manager*Table1*Table1*ButtonBox2*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(<expr>)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max()\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max()\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression Manager*Table1*Table1*ButtonBox2*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(<exp)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max()\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max()\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-set-text-entry \"Expression*Table1*TextEntry2(Name)\" \"u_max\")(cx-gui-do cx-activate-item \"Expression*Table1*TextEntry2(Name)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression Manager*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|u_max"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|u_max"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-u_max*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|u_max"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|u_max"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|u_max\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude)\" . 1))(cx-gui-do cx-activate-item \"Location Selection*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude'bottom', 'top')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"max(VelocityMagnitude'bottom', 'top')\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|u_max"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-u_max*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Facet Maximum...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*DropDownList3(Field Variable)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*DropDownList3(Field Variable)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-text-entry \"Surface Report Definition*Table1*Table1*TextEntry1(Name)\" \"u_max\")(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*TextEntry1(Name)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton4(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q-bottom"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q-bottom"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q-bottom\"))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Monitors|Report Files|report\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|report"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|report"))(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|report"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-rfile"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-rfile"))(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-rfile"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-rfile"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-rfile"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q-bottom"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))(cx-gui-do cx-set-toggle-button2 "Expression Report Definition*Table1*Table3*Table5(Create)*CheckButton1(Report File)" #t)(cx-gui-do cx-activate-item "Expression Report Definition*Table1*Table3*Table5(Create)*CheckButton1(Report File)")(cx-gui-do cx-activate-item "Expression Report Definition*PanelButtons*PushButton1(OK)")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q-bottom"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q-bottom"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|q-bottom\"))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"MassFlow(['bottom'])/1000[kg/m^3]\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-rfile"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-rfile"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-q-rfile*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q-bottom"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q-bottom"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q-bottom"))(cx-gui-do cx-set-toggle-button2 "Expression Report Definition*Table1*Table3*Table5(Create)*CheckButton1(Report File)" #t)(cx-gui-do cx-activate-item "Expression Report Definition*Table1*Table3*Table5(Create)*CheckButton1(Report File)")(cx-gui-do cx-activate-item "Expression Report Definition*PanelButtons*PushButton1(OK)")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|u_max-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|u_max-rfile"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|u_max-rfile"))(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-bottom-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-bottom-rfile"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-bottom-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*Table1*Table6(File Name)*PushButton3(Browse)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|q-bottom-rfile"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Residual"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions"))(cx-gui-do cx-activate-item "Expression Manager*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Edit Report File*Table1*Table6(File Name)*PushButton3(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/outputs/tt\") \"Output Files (*.out *.xy )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-set-text-entry "Edit Report File*Table1*Table6(File Name)*TextEntry1" "C:/Users/guill/Documents/chiari/computations/ansys/s101/outputs/tt")(cx-gui-do cx-set-text-entry "Edit Report File*Table1*Table6(File Name)*TextEntry1" "C:/Users/guill/Documents/chiari/computations/ansys/s101/outputs/dp")(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-set-text-entry "Edit Report File*Table1*Table6(File Name)*TextEntry1" "C:/Users/guill/Documents/chiari/computations/ansys/s101/outputs/dp")(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*Table1*Table6(File Name)*PushButton3(Browse)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Edit Report File*Table1*Table6(File Name)*TextEntry1" "C:/Users/guill/Documents/chiari/computations/ansys/s101/outputs/dp")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Edit Report File*Table1*Table6(File Name)*PushButton3(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/dp\") \"Output Files (*.out *.xy )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuAutomaticExport*Solution Data Export...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities|Autosave (Every Time Steps)"))(cx-gui-do cx-activate-item "Autosave*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Report Files*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"New Report File*Table1*Table6(File Name)*PushButton3(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/pc-mri/report-file-0.out\") \"Output Files (*.out *.xy )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|report-file-0"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-report-file-0*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list ))')
setup1.SendCommand(Command="/define/profiles/list-profile-parameters")
setup1.SendCommand(Command="/define/profiles/list-profile-parameters")
setup1.SendCommand(Command="/define/profiles/list-profiles")
setup1.SendCommand(Command="/define/profiles/interpolation-method")
setup1.SendCommand(Command="/report/modified-setting/modified-setting ()")
setup1.SendCommand(Command="/surface/plane-surface plano-prueba three 10 20 30 10 20 30 10 20 30 no")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="/surface/plane-surface fm three -0.011573 -0.026052 -0.06506099999999999 0.0081876 0.013123 -0.064267 0.02816 0.01292 -0.06324100000000001 no")
setup1.SendCommand(Command="/surface/plane-surface fm three-points 1 1 1 1 1 1 1 1 1 no")
setup1.SendCommand(Command="/surface/plane-surface aaaa three-points -0.011573 -0.026052 -0.06506099999999999 0.0081876 0.013123 -0.064267 0.02816 0.01292 -0.06324100000000001 no")
setup1.SendCommand(Command="/surface/plane-surface aaaa three-points -0.011573 -0.026052 -0.06506099999999999 0.0081876 0.013123 -0.064267 0.02816 0.01292 -0.06324100000000001 no")
setup1.SendCommand(Command="/surface/plane-surface aaaa three-points -0.011573 -0.026052 -0.06506099999999999 0.0081876 0.013123 -0.064267 0.02816 0.01292 -0.06324100000000001 no")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(build-popup-menu)(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='/surface/plane-surface sksksk three yes "24.1"')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.0795932 -0.159899 -0.0805039) '(0 0 0) '(-0.233193 -0.377981 0.747474) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|fm-25\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|fm-25\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-fm-25*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Display")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.16413 0.193522 -0.0832991) '(0 0 0) '(-0.102501 -0.176234 0.0823472) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0607983 0.142185 -0.216593) '(0 0 0) '(0.456004 0.0639801 0.0220559) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|sksksk\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|sksksk\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-sksksk*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuAutomaticExport*Solution Data Export...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuAutomaticExport*Solution Data Export...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table1*DropDownList2(File Type)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table1*DropDownList2(File Type)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuAutomaticExport*Solution Data Export...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuAutomaticExport*Solution Data Export...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='/file/transient-export/ascii "mama" bottom (top) yes no loca "time-step" 1 time-step')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 1))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 79 80 81 82 83 84 85 86 88 89 90 91 92 93 94 95))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table4*List1(Quantities)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '())(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-activate-item \"Automatic Export*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuAutomaticExport*Solution Data Export...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table7*Table1*PushButton2(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"vel\") \"CGNS Files ()\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table7*Table1*PushButton2(Browse)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table7*Table1*PushButton2(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"FLTG.7-Setup-Output\") \"CGNS Files ()\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table7*Table1*PushButton2(Browse)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table1*DropDownList2(File Type)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table1*DropDownList2(File Type)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table7*Table1*PushButton2(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/guill/Documents/chiari/computations/ansys/s101/outputs/surface_velocities/vel\") \"ASCII Files ()\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command='/file/transient-export/ascii "loca_file_name" bottom (top) no no c:/users/guill/documents/chiari/computations/ansys/s101/outputs/surface_velocities/vel "time-step" 1 time-step')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 1))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='/file/transient-export/ascii "directory" bottom (top) no no vel "time-step" 1 time-step')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 2))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*Table1*Table2*Table4*List1(Quantities)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '())(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\" '( 0))(cx-gui-do cx-activate-item \"Automatic Export*Table1*Table2*Table4*List1(Quantities)\")(cx-gui-do cx-activate-item \"Automatic Export*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='/file/transient-export/ascii "directory" bottom (top) no no "export-1" "time-step" 1 flow-time 2')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='/file/transient-export/ascii "directory" bottom (top) no no "export-2" "time-step" 1 flow-time 3')
setup1.SendCommand(Command='/file/transient-export/ascii "directory" bottom (top) no no "export-3" "time-step" 1 quit')
setup1.SendCommand(Command="/close-fluent")
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='/file/transient-export/ascii "directory" bottom (top) no no caca exit "time-step" 1 flow-time 6')
setup1.SendCommand(Command='/file/transient-export/asciiascii "loca" (bottom) pressure velocity-magnitude velocity-magnitude x-velocity velocity-magnitude y-velocity velocity-magnitude z-velocity no no llll "time-step" 1 flow-time 6')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Calculation Activities\"))(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 7))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 8))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='/file/transient-export/ascii "directory" bottom (top) pressure velocity-magnitude x-velocity no no no name_file "time-step" 1 time-step')
setup1.SendCommand(Command='/file/transient-export/ascii "directory" bottom (top) pressure x-velocity y-velocity z-velocity quit no no name_file "time-step" 1 time-step')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 1))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 10))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 9))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 7))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 9))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 10))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 9))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 10))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 3))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 10))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 8))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 6))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='/file/transient-export/ascii "directory" bottom (top) pressure x-velocity y-velocity z-velocity quit no no name_file "time-step" time-step 1 quit')
setup1.SendCommand(Command='/file/transient-export/ascii "directory" bottom (top) pressure x-velocity y-velocity z-velocity quit no no name_file "time-step" 1 time-step')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 1))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 0))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='/file/transient-export/asciiascii "nana" (top) velocity-magnitude quit no no "export-1" "time-step" 1 quit')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='/file/set-tui-version "24.1"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='/surface/plane-surface fm three-points-11.572645 no /surface/plane-surface fm-25 three-points-11.572645 no /surface/plane-surface c01c02 three-points-9.927048 no /surface/plane-surface c02c03 three-points-9.152335 no /surface/plane-surface c03c04 three-points-7.751261 no /file/transient-export/ascii "C:/Users/guill/Documents/chiari/computations/ansys/s101/output/report" fm c01c02 c02c03 c03c04 fm-25 bottom pressure x-velocity y-velocity z-velocity q no no report "time-step" time-step yz-plane yes "24.1"')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='/file/transient-export/ascii "C:/Users/guill/Documents/chiari/computations/ansys/s101/output/report" fm c01c02 c02c03 c03c04 fm-25 bottom (top) pressure x-velocity y-velocity z-velocity quit no no report "time-step" 1 time-step')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)" 5)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7(Time Advancement)*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table9(Solution Advancement)*Table1*PushButton1(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*rotate")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.17669 0.00210337 -0.1797) '(0 0 0) '(0.0011747 -0.217921 0.62318) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.176701 -0.178412 0.0151258) '(0 0 0) '(0.460855 -0.721121 0.26159) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.126633 0.176137 0.11111) '(0 0 0) '(0.181021 0.325394 -0.22354) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0176471 -0.0703099 -0.0494739) '(0 0 0) '(-0.422398 0.0663799 0.202689) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0282457 0.0442094 0.00574689) '(0 0 0) '(0.116557 0.0242674 -0.0522697) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.121917 -0.167431 -0.0437233) '(0 0 0) '(-0.342385 -0.0960323 0.112936) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0128247 0.0424373 0.078106) '(0 0 0) '(0.118506 0.243689 -0.151938) 0 0)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.119871 0.100511 -0.0112377) '(0 0 0) '(0.0162192 0.104474 -0.100626) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.34269 -0.18772 -0.143895) '(0 0 0) '(-0.217547 -0.564909 0.310484) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.11784 0.171174 0.166497) '(0 0 0) '(-0.277287 0.400055 -0.242106) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.000660628 -0.023071 -0.0200714) '(0 0 0) '(0.0759182 -0.0558022 0.0706206) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|dp\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|dp\"))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|u_max"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|u_max"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|u_max"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|u_max"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|u_max"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|u_max"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|u_max"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='/report/surface-integrals/facet-max fluid () velocity-magnitude yes "q"')
setup1.SendCommand(Command='/report/surface-integrals/facet-avg "fluid" () x-velocity no')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|u_max"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-u_max*Compute")')
setup1.SendCommand(Command='/report/surface-integrals/facet-max "fluid" () velocity-magnitude yes "cada"')
setup1.SendCommand(Command="/report/surface-integrals/flow-rate (bottom) velocity-magnitude no")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="/solve/report-definitions/list")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="/solve/report-definitions/add dp_new quit")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command="/solve/report-definitions/add dp_loca")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|dp\"))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="/solve/report-definitions/add dp-loca")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))(cx-gui-do cx-activate-item "Warning*Cancel")(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))(cx-gui-do cx-activate-item "Warning*Cancel")(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca (Invalid)"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="/solve/report-definitions/add dp-loca surface-integral field pressure field pressure average-over 1 surface-names (bottom) report-type surface-integral quit")
setup1.SendCommand(Command="/solve/report-definitions/edit dp-loca quit")
setup1.SendCommand(Command='/solve/report-definitions/list-properties "flow-time"')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|cada (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|cada (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|cada (Invalid)"))(cx-gui-do cx-activate-item "Warning*Cancel")(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|cada (Invalid)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-cada (Invalid)*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="/solve/report-definitions/add cada surface-areawtui quit")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0 (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|expr_0 (Invalid)\"))(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 1)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0 (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|expr_0 (Invalid)\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Report Definitions|dp\"))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0 (Invalid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0 (Invalid)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|expr_0 (Invalid)\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression*Table1*ExpressionEntry3(Definition)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|expr_0\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(Field Functions)*PushButton1(Custom)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*PushButton2(Select)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Field Function Calculator*Table1*ButtonBox2*PushButton30(DEL)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Field Function Calculator*Table1*ButtonBox2*PushButton30(DEL)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)\" '( 5))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Field Function Calculator*Table1*Frame3(Select Operand Field Functions from)*Table1*DropDownList1(Field Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Custom Field Function Calculator*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|expr_0\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="/define/named-expressions/list")
setup1.SendCommand(Command='/define/named-expressions/list-properties "expr_0"')
setup1.SendCommand(Command='/define/named-expressions/compute "expr_0"')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|lalala"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|lalala"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|lalala\"))(cx-gui-do cx-set-text-entry \"Expression*Table1*Frame1*Frame1(Details)*TextEntry2(Description)\" \"beffr\")(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-set-text-entry \"Expression*Table1*Frame1*Frame1(Details)*TextEntry2(Description)\" \"\")(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|lalala"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|lalala"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|lalala\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="/define/named-expressions/add \"lalala\" definition \"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" description \"Pressure difference between the FM and 25 mm below\" output-parameter no quit")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command="/define/named-expressions/add \"cora\" definition \"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" description \"Pressure difference between the FM and 25 mm below\" output-parameter no quit")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|cora"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|cora"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Named Expressions|cora\"))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"Average(StaticPressure,['fm'],Weight ='Area')-Average(StaticPressure,['fm-25'],Weight ='Area')\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|cora"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-cora*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-dp*Compute")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*NewSubMenu*Expression...\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))(cx-gui-do cx-set-toggle-button2 "Expression*Table1*Frame1*Frame1(Details)*CheckButton5(Use as Output Parameter)" #t)(cx-gui-do cx-activate-item "Expression*Table1*Frame1*Frame1(Details)*CheckButton5(Use as Output Parameter)")(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|dp-rfile"))(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|dp_FM"))(cx-gui-do cx-set-toggle-button2 "Expression*Table1*Frame1*Frame1(Details)*CheckButton5(Use as Output Parameter)" #f)(cx-gui-do cx-activate-item "Expression*Table1*Frame1*Frame1(Details)*CheckButton5(Use as Output Parameter)")(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "New Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report File Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*ButtonBox3*PushButton1(New)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuCreateMonitor*Expression...\")(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-set-expression-entry \"Expression Report Definition*Table1*ExpressionEntry2\" '(\"\" . 1))(cx-gui-do cx-activate-item \"Expression Report Definition*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|cora"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|cora"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-cora*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="/define/named-expressions/add \"dp_FM\" definition \"Average(StaticPressure,['fm'], Weight ='Area') - Average(StaticPressure,['fm-25'], Weight ='Area')\"")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|definition (Invalid)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-definition (Invalid)*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|expr_0"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-expr_0*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|lala (Invalid)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-lala (Invalid)*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Named Expressions|lalala"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-lalala*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list ))')
setup1.SendCommand(Command="/solve/report-files/list")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|lala"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|lala"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|lala"))(cx-gui-do cx-set-toggle-button2 "Edit Report File*Table1*CheckButton8(Write Instantaneous Values)" #f)(cx-gui-do cx-activate-item "Edit Report File*Table1*CheckButton8(Write Instantaneous Values)")(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|lala"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|lala"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|lala"))(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Files|lala"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-lala*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp-loca"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-dp-loca*Delete")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuAutomaticExport*Solution Data Export...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|dp"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Monitors|Report Plots|flow_rate-rplot"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '())(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0184919 -0.0450125 -0.0391113) '(0 0 0) '(0.1157 -0.138062 0.101486) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0308569 0.00540811 0.0378364) '(0 0 0) '(-0.075388 0.133203 -0.0852354) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.252057 0.0077896 -0.20895) '(0 0 0) '(-0.17079 -0.51354 0.080292) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0188885 -0.0281097 0.104407) '(0 0 0) '(0.0814166 0.383622 -0.0439274) 0 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.105054 -0.0419485 -0.0567177) '(0 0 0) '(-0.328609 -0.365558 -0.118614) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.100725 0.23211 -0.164786) '(0 0 0) '(0.464206 -0.957503 -0.985085) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0629048 -0.082251 -0.00964022) '(0 0 0) '(-0.0939247 0.0207473 0.462938) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0336875 -0.0914837 0.340771) '(0 0 0) '(-0.111259 1.6107 0.384049) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0586118 -0.0324186 -0.242638) '(0 0 0) '(0.200845 -1.19539 0.225956) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0200721 0.165922 -0.104033) '(0 0 0) '(0.122576 -0.482525 -0.797341) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '())(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5 6 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 5 6 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0104021 -0.179736 0.129786) '(0 0 0) '(-0.206583 0.615858 0.842487) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.017607 0.122849 -0.119568) '(0 0 0) '(-0.147528 -0.476324 -0.605255) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.000917988 -0.0447297 0.139662) '(0 0 0) '(0.189919 1.41158 0.520874) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.00859713 0.0545422 -0.0395127) '(0 0 0) '(0.187187 0.314447 -0.303863) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.00542373 -0.0084965 -0.00478493) '(0 0 0) '(-0.00138445 -0.0375503 0.0612372) 0 0)(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*Table2*ButtonBox1*PushButton2(Profiles)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='/solve/report-files/add lala report-defs dp-loca () write-instantaneous-values? yes file-name "C:/Users/guill/Documents/chiari/computations/ansys/s101/outputs/report" quit')
setup1.SendCommand(Command="/solve/initialize/fmg-initialization no")
setup1.SendCommand(Command="/solve/initialize/fmg-initialization no")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame13*PushButton2(FMG)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "FMG Initialization*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command="/solve/initialize/set-fmg-initialization 5 0.001 100 0.001 200 0.001 400 0.001 800 0.001 800 0.75 yes")
setup1.SendCommand(Command="/solve/initialize/initialize-flow no")
setup1.SendCommand(Command="/solve/initialize/initialize-flow yes")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command="/solve/initialize/initialize-flow yes")
setup1.SendCommand(Command="/solve/initialize/set-defaults/")
setup1.SendCommand(Command='/solve/initialize/set-hyb-initialization/general-settings/ 10 1. 1. "relative" no no no')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="/solve/iterate 1")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command="/solve/update-physical-time")
setup1.SendCommand(Command="/solve/update-physical-time")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q-bottom"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|q-bottom"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|delta-time"))')
setup1.SendCommand(Command="/solve/convergence-conditions/ quit")
setup1.SendCommand(Command="/solve/iterate 1 ok 5")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Report Definitions|flow-time"))')
setup1.SendCommand(Command="/solve/dual-time-iterate 2 10 1 ok")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Start Journal...")')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command=r'/file/read-profile "C:\Users\guill\Documents\chiari\computations\ansys\s101\inputs\profiles\bottom_prof_1.csv"')
setup1.SendCommand(Command="(cx-use-window-id 51)")
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 yes")
setup1.SendCommand(Command="time-step 0.01")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command="time-step 0.01")
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command="/solve/set/flow-warnings? yes")
setup1.SendCommand(Command="/solve/set/set-solution-methods-to-default yes")
setup1.SendCommand(Command="/solve/set/set-solution-methods-to-default no")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.00875356 -0.024206 -0.0201709) '(0 0 0) '(0.0040456 -0.146718 0.174779) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.000906099 0.0247866 0.0160987) '(0 0 0) '(0.0171846 0.256342 -0.392063) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0141122 -0.0226456 -0.0104291) '(0 0 0) '(0.0118139 -0.0632132 0.143026) 0 0)")
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*Table2*ButtonBox1*PushButton2(Profiles)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*Table7*Table1*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*Table7*Table1*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*Table7*Table1*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no no 0.")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*Table2*ButtonBox1*PushButton2(Profiles)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 yes")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.195251 0.105711 -0.0415244) '(0 0 0) '(0.522888 -0.214985 0.0860489) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0651701 -0.15646 -0.13069) '(0 0 0) '(-1.29123 -0.341935 -0.0534689) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.231188 0.0812261 -0.0457612) '(0 0 0) '(0.389574 -1.06125 0.025574) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.075197 -0.0629352 -0.0257401) '(0 0 0) '(-0.338157 0.219283 -0.120615) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.251634 0.0519908 0.0133553) '(0 0 0) '(0.160375 1.13121 0.117653) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0297397 0.177396 0.0848704) '(0 0 0) '(0.947006 0.217186 -0.102495) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Mesh Display*fl_mesh_svg_graphics_toolbar")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.00477894 -0.105649 -0.0122468) '(0 0 0) '(-0.473047 0.0114815 0.102143) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0806826 -0.0869275 0.0625338) '(0 0 0) '(-0.202131 -0.124358 0.0925838) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.20567 -0.0113669 0.00324178) '(0 0 0) '(-0.00526494 -0.318988 0.236519) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.107585 0.112384 -0.114676) '(0 0 0) '(0.293226 -0.494181 0.134217) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0873746 0.0218992 -0.179392) '(0 0 0) '(0.832262 0.0520238 -0.404045) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.274597 -0.117114 0.0850309) '(0 0 0) '(-0.177946 -0.717907 -0.439726) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.177147 0.056275 -0.109918) '(0 0 0) '(-0.570945 -0.159394 0.229161) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.151849 -0.0853383 0.283045) '(0 0 0) '(0.308155 1.10099 0.533738) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.134962 0.122699 0.00167497) '(0 0 0) '(-0.100703 0.107498 0.00740021) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.00193046 0.00738754 -0.0018091) '(0 0 0) '(0.00304356 -0.013806 0.00328827) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0753876 -0.15273 -0.040497) '(0 0 0) '(-0.354042 0.000991881 0.0336121) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0614096 0.0859414 0.0176796) '(0 0 0) '(0.0410073 0.27874 -0.125103) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.01164 0.0893378 0.036259) '(0 0 0) '(0.297258 0.0729449 -0.0933337) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0 0 0) '(0 0 0) '(0 0 0) 0 0)(cx-use-window-id 51)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(fm) (cx-active-window))(cx-use-window-id 51)(cx-use-window-id 51)(build-popup-menu)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Info")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(top) (cx-active-window))(cx-use-window-id 51)(build-popup-menu)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Info")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '(c01c02) (cx-active-window))(cx-use-window-id 51)(build-popup-menu)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Info")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*PopupMenuTree-fm*Display\")(cxg-clear-all-selections (cx-active-window))(cxg-add-surfaces-to-selection '() (cx-active-window))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c03c04"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c03c04"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c03c04"))(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.0149641 -0.0924694 -0.029575) '(0 0 0) '(0.0219169 -0.61336 0.222074) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|fm\"))")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|fm\"))(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table1*Frame3*Table1*Table1(Point)*RealEntry1(X)\" '( 0))(cx-gui-do cx-activate-item \"Plane Surface*Table1*Frame3*Table1*Table1(Point)*RealEntry1(X)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(0.187372 0.0747488 0.233674) '(0 0 0) '(0.547123 0.402772 -0.566892) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.154746 -0.0133508 -0.141838) '(0 0 0) '(-0.44238 -0.176062 0.499842) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.110216 0.0277969 0.130006) '(0 0 0) '(0.35634 0.167889 -0.35035) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|c02c03\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|c01c02\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|c01c02\"\"Results|Surfaces|c02c03\"\"Results|Surfaces|c03c04\"\"Results|Surfaces|fm\"\"Results|Surfaces|fm-25\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Surfaces|c01c02\"\"Results|Surfaces|c02c03\"\"Results|Surfaces|c03c04\"\"Results|Surfaces|fm\"\"Results|Surfaces|fm-25\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Solution|Calculation Activities\"))(cx-gui-do cx-set-list-selections \"Calculation Activities*List2(Automatic Export)\" '( 1))(cx-gui-do cx-activate-item \"Calculation Activities*List2(Automatic Export)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|fm"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-fm*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Display")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.127683 0.0607296 -0.146619) '(0 0 0) '(-0.375791 -0.128591 0.347062) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0287719 -0.0732287 0.0415077) '(0 0 0) '(-0.0606775 0.194404 -0.0612983) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Results|Graphics|Contours|contour-1\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*Frame2*Table1*List_Tree2\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5 6 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 5 6 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0167357 0.0262064 -0.0248223) '(0 0 0) '(-0.0830033 0.0930814 -0.0330611) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0190865 -0.0656694 -0.0113161) '(0 0 0) '(-0.313436 0.071852 -0.0318421) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0212723 0.0691709 0.015144) '(0 0 0) '(0.399438 -0.385186 0.154751) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.00672589 0.0198237 -0.00905006) '(0 0 0) '(-0.0110091 -0.042196 0.0139701) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0122542 0.00909536 0.0321866) '(0 0 0) '(0.119004 0.0296319 -0.0531127) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.0132604 -0.0893474 -0.0297233) '(0 0 0) '(-0.172633 0.0178132 0.0564055) 0 0)")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 yes")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 no no")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 no no")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok cancel")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 cancel")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Calculation Activities"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Results|Surfaces|c01c02""Results|Surfaces|c02c03""Results|Surfaces|c03c04""Results|Surfaces|fm""Results|Surfaces|fm-25"))(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuPopupMenu*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question *PanelButtons*PushButton3(Yes)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Calculation Activities*ButtonBox4*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Automatic Export*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 yes")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok ok")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_2.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 1 ok ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 1 ok")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 ok")
setup1.SendCommand(Command="time-step 0.01134")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command="time-step 0.5")
setup1.SendCommand(Command='/file/read-profile "C:/Users/guill/Documents/chiari/computations/ansys/s101/inputs/profiles/bottom_prof_1.csv"')
setup1.SendCommand(Command='/define/boundary-conditions/velocity-inlet bottom no no yes yes yes no "bottom_vel" "u1" no 0.')
setup1.SendCommand(Command="/solve/initialize/hyb-initialization yes")
setup1.SendCommand(Command="/solve/dual-time-iterate 1 20 ok")
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.160354 0.116407 0.106654) '(0 0 0) '(0.604748 0.214999 -0.671104) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.00792026 -0.0148561 -0.00327857) '(0 0 0) '(-0.141311 0.17485 0.0391393) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(-0.0150065 -0.172912 -0.0635947) '(0 0 0) '(-0.127916 -0.106312 0.312597) 0 0)(cx-gui-do cx-activate-item \"Messages*PanelButtons*PushButton1(Close)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ReadSubMenu*Journal...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-use-window-id 51)(handle-key "control ??")')
setup1.SendCommand(Command='(cx-use-window-id 51)(handle-key "control c")(cx-use-window-id 51)(handle-key "control c")(cx-use-window-id 51)(handle-key "control c")(cx-use-window-id 51)(handle-key "control c")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(0.0606492 0.210626 0.0783279) '(0 0 0) '(0.119738 0.167069 -0.468038) 0 0)(cx-use-window-id 51)(cx-set-camera-relative '(0.149612 -0.0237514 -0.0137602) '(0 0 0) '(-0.24125 0.178828 -0.265039) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
