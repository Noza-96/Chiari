# encoding: utf-8
# 2024 R1
SetScriptVersion(Version="24.1.144")
system1 = GetSystem(Name="FLTG")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 1)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 2)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 3)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 4)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 5)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 6)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 7)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 8)(cx-gui-do cx-activate-tab-index "Velocity Inlet*Frame2*Frame2" 0)(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*Frame2*Table1*List_Tree2\" (list \"Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)\"))(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")(cx-gui-do cx-enable-apply-button \"Velocity Inlet\")(cx-gui-do create-new-param \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table9*ExpressionEntry1(Velocity Magnitude)\" 0 \"velocity\")(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 1)(cx-gui-do cx-activate-tab-index \"Expression*Table1*Frame1\" 0)(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [cm/s]\" . 1))(cx-gui-do cx-set-expression-entry \"Expression*Table1*ExpressionEntry3(Definition)\" '(\"0 [cm/s]\" . 1))(cx-gui-do cx-activate-item \"Expression*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame2*Frame2*Frame1(Momentum)*Table1*Table9*ExpressionEntry1(Velocity Magnitude)\" '(\"U_inlet\" . 1))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-use-window-id 51)(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet|bottom (velocity-inlet, id=13)"))(cx-gui-do cx-enable-apply-button "Velocity Inlet")(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*Table2*ButtonBox1*PushButton2(Profiles)")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*Table2*ButtonBox1*PushButton2(Profiles)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*Table7*Table1*PushButton2(Write)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Write Profile*List5(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Write Profile*List5(Surfaces)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-activate-item \"Write Profile*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 9 11))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 24))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-activate-item \"Write Profile*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"bottom_vel\") \"Profile Files (*.csv *.prof )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame12*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Write Profile*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"bottom_ve\") \"Profile Files (*.csv *.prof )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Write Profile*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 51)(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*Table2*ButtonBox1*PushButton2(Profiles)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*Table7*Table1*PushButton2(Write)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Write Profile*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"bottom.csv\") \"Profile Files (*.csv *.prof )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Write Profile*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Profiles*Table8(Preview Options)*ToggleBox1(Mode)*Surface" #t)(cx-gui-do cx-activate-item "Profiles*Table8(Preview Options)*ToggleBox1(Mode)*Surface")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*Table7*Table1*PushButton2(Write)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Write Profile*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"bot_surface.csv\") \"Profile Files (*.csv *.prof )\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 24 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 24 56 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 24 55 56 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 24 54 55 56 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 24 49 54 55 56 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 24 48 49 54 55 56 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 24 47 48 49 54 55 56 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 24 46 47 48 49 54 55 56 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 24 45 46 47 48 49 54 55 56 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-activate-item \"Write Profile*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"test.csv\") \"Profile Files (*.csv *.prof )\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Write Profile*List5(Surfaces)\" '( 1 7))(cx-gui-do cx-activate-item \"Write Profile*List5(Surfaces)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 21 24 45 46 47 48 49 54 55 56 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 11 21 22 24 45 46 47 48 49 54 55 56 57))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Write Profile*List10(Values)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '())(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-set-list-selections \"Write Profile*List10(Values)\" '( 24))(cx-gui-do cx-activate-item \"Write Profile*List10(Values)\")(cx-gui-do cx-activate-item \"Write Profile*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"wall\") \"Profile Files (*.csv *.prof )\")")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Write Profile*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"wall.csv\") \"Profile Files (*.csv *.prof )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*Table7*Table1*PushButton2(Write)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Write Profile*List5(Surfaces)\" '( 7))(cx-gui-do cx-activate-item \"Write Profile*List5(Surfaces)\")(cx-gui-do cx-activate-item \"Write Profile*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"wall.csv\") \"Profile Files (*.csv *.prof )\")(cx-gui-do cx-activate-item \"Question*OK\")")
system2 = GetSystem(Name="Geom")
geometry1 = system2.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Write Profile*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
tGridData1 = GetDataEntity("/Mesh 1/TGridData:TGridData")
tGridData1.SetEntityProperties(Properties=Set(RunParallel=True, NumberOfProcs=16))
mesh1 = system1.GetContainer(ComponentName="Mesh")
Fluent.Edit(Container=mesh1)
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='/file/set-tui-version "24.1"(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)')
setup1.SendCommand(Command="(newline)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*rotate")')
setup1.SendCommand(Command="(cx-use-window-id 51)(cx-set-camera-relative '(-0.836863 -1.36264 -5.12441) '(0 0 0) '(-0.451786 -0.754375 0.19688) 0 0)(cx-use-window-id 51)(handle-key \"control ??\")(cx-use-window-id 51)(handle-key \"control e\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer*boxselect")')
setup1.SendCommand(Command='(cx-use-window-id 51)(cx-use-window-id 51)(handle-key "control ??")(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Display)*CheckButton7(Edge Zones)" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Display)*CheckButton7(Edge Zones)")(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Display)*CheckButton7(Edge Zones)" #f)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Task Page)*Table1*Table3(Display)*CheckButton7(Edge Zones)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*CreateSubMenu*Bounding Box...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Bounding Box*List1(Face Zones)\" '( 1))(cx-gui-do cx-activate-item \"Bounding Box*List1(Face Zones)\")(cx-gui-do cx-set-list-selections \"Bounding Box*List1(Face Zones)\" '( 0 1))(cx-gui-do cx-activate-item \"Bounding Box*List1(Face Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Bounding Box*PanelButtons*PushButton5(Draw)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Bounding Box*PanelButtons*PushButton5(Draw)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Bounding Box*List1(Face Zones)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Bounding Box*List1(Face Zones)\" '())(cx-gui-do cx-activate-item \"Bounding Box*List1(Face Zones)\")(cx-gui-do cx-set-list-selections \"Bounding Box*List1(Face Zones)\" '( 0))(cx-gui-do cx-activate-item \"Bounding Box*List1(Face Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Bounding Box*PanelButtons*PushButton5(Draw)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Bounding Box*PanelButtons*PushButton5(Draw)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Bounding Box*PanelButtons*PushButton4(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Bounding Box*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Zone Type*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'H:\\.shortcut-targets-by-id\\1XF2JOROdJ0B3txwAztMCdrZx0_ng8Mo8\\Syringomyelia\\3. Ansys\\Chiari_Granada_files\\dp0\\FLTG\\Fluent\\FLTG.1_workflow_files\\FLTG.1.wft')\")")
setup1.SendCommand(Command="(%py-exec \"workflow.SaveWorkflow(FilePath=r'H:\\.shortcut-targets-by-id\\1XF2JOROdJ0B3txwAztMCdrZx0_ng8Mo8\\Syringomyelia\\3. Ansys\\Chiari_Granada_files\\dp0\\FLTG\\Fluent\\FLTG.1_workflow_files\\FLTG.1.wft')\")")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
Save(Overwrite=True)
